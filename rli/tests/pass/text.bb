(import text)

(assert-eq 'So (text/category '©'))
(assert-eq 'So (text/category '🎀'))
(assert-eq 'Ll (text/category 'a'))
(assert-eq 'Lu (text/category 'A'))
(assert-eq 'Nd (text/category '3'))
(assert-eq 'Zs (text/category ' '))
(assert-eq 'Cc (text/category '\n'))
(assert-eq "Letter, Uppercase" (text/describe-category 'Lu))
(assert-eq "Symbol, Other" (text/describe-category 'So))
(assert (text/control? "\t\r\n"))
(assert (text/control? '\r'))
(assert (text/letter? "abcXYZ"))
(assert (text/letter? 'ϑ'))
(assert (not (text/letter? '1')))
(assert (not (text/digit? '3')))
(assert (text/decimal? "1234567890"))
(assert (text/decimal? '0'))
(assert (not (text/decimal? 'a')))
(assert (text/hex? "0123456789abcdefABCDEF"))
(assert (text/hex? 'a'))
(assert (not (text/hex? 'g')))
(assert (text/mark? '́'))
(assert (text/mark? '̈'))
(assert (not (text/mark? 'a')))
(assert (text/number? "1234567890"))
(assert (text/symbol? '©'))
(assert (text/math? "∑+⟦𝒉"))
(assert (not (text/math? '-')))
(assert (text/punctuation? ".,;:!?-"))
(assert (text/separator? ' '))
(assert-eq "HELLO🎀" (text/uppercase "hello🎀"))
(assert-eq "hello🎀" (text/lowercase "HELLO🎀"))
(assert-eq "hello🎀" (text/casefold "HELLO🎀"))
(assert-eq 2 (text/display-width '🎀'))
(assert-eq 4 (text/byte-count '🎀'))
(assert (text/case-insensitive-eq? "hello" "HELLO"))
