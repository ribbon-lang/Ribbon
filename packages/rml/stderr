debug(main): init
debug(rml): initializing interpreter ...
debug(refcount): Header/onInit 1 1 env.Env @ [system] : #7f7fd43b6100
debug(refcount): Header/onInit 1 1 env.Env @ [system] : #7f7fd43b6200
debug(refcount): Header/onInit 1 1 env.Env @ [system] : #7f7fd43b6300
debug(refcount): incr 2 1 env.Env @ [system] : #7f7fd43b6200
debug(refcount): incr weak 2 2 env.Env @ [system] : #7f7fd43b6200
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 2 env.Env @ [system] : #7f7fd43b6200
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43b6400
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_9820] : #7f7fd43b6500
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43b6400
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43b6700
debug(refcount): incr 2 1 env.Env @ [system] : #7f7fd43b6300
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43b6400
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 1 env.Env @ [system] : #7f7fd43b6300
debug(refcount): Header/onInit 1 1 env.Env @ [system] : #7f7fd43b6900
debug(refcount): incr 2 2 env.Env @ [system] : #7f7fd43b6200
debug(refcount): incr weak 2 3 env.Env @ [system] : #7f7fd43b6200
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 3 env.Env @ [system] : #7f7fd43b6200
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43b6a00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43b6b00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43b6c00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43b6d00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_10202] : #7f7fd43b6e00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43b6a00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_10202] : #7f7fd43b8000
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43b6b00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_10202] : #7f7fd43b8100
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43b6c00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_10202] : #7f7fd43b8200
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43b6d00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43b8300
debug(refcount): incr 2 1 env.Env @ [system] : #7f7fd43b6900
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43b6a00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43b6b00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43b6c00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43b6d00
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 1 env.Env @ [system] : #7f7fd43b6900
debug(refcount): Header/onInit 1 1 env.Env @ [system] : #7f7fd43b8400
debug(refcount): incr 2 3 env.Env @ [system] : #7f7fd43b6200
debug(refcount): incr weak 2 4 env.Env @ [system] : #7f7fd43b6200
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 4 env.Env @ [system] : #7f7fd43b6200
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43b8500
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43b8600
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43b8700
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43b8800
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43b8900
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43b8a00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43b8b00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43b8c00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43b8d00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43b8e00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43b8f00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43ba000
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43ba100
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_10724] : #7f7fd43ba200
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43b8500
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_10724] : #7f7fd43ba400
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43b8600
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_10724] : #7f7fd43ba500
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43b8700
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_10724] : #7f7fd43ba600
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43b8800
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_10724] : #7f7fd43ba700
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43b8900
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_10724] : #7f7fd43ba800
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43b8a00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_10724] : #7f7fd43ba900
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43b8b00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_10724] : #7f7fd43baa00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43b8c00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_10724] : #7f7fd43bab00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43b8d00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_10724] : #7f7fd43bac00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43b8e00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_10724] : #7f7fd43bad00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43b8f00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_10724] : #7f7fd43bae00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43ba000
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_10724] : #7f7fd43baf00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43ba100
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43be000
debug(refcount): incr 2 1 env.Env @ [system] : #7f7fd43b8400
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43b8500
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43b8600
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43b8700
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43b8800
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43b8900
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43b8a00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43b8b00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43b8c00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43b8d00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43b8e00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43b8f00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43ba000
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43ba100
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 1 env.Env @ [system] : #7f7fd43b8400
debug(refcount): Header/onInit 1 1 env.Env @ [system] : #7f7fd43be200
debug(refcount): incr 2 4 env.Env @ [system] : #7f7fd43b6200
debug(refcount): incr weak 2 5 env.Env @ [system] : #7f7fd43b6200
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 5 env.Env @ [system] : #7f7fd43b6200
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43be300
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43be400
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43be500
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43be600
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43be700
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43be800
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43be900
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43bea00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_11157] : #7f7fd43beb00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43be300
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_11157] : #7f7fd43bed00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43be400
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_11157] : #7f7fd43bef00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43be500
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_11157] : #7f7fd43c2000
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43be600
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_11157] : #7f7fd43c2100
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43be700
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_11157] : #7f7fd43c2200
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43be800
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_11157] : #7f7fd43c2300
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43be900
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_11157] : #7f7fd43c2400
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43bea00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43c2500
debug(refcount): incr 2 1 env.Env @ [system] : #7f7fd43be200
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43be300
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43be400
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43be500
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43be600
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43be700
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43be800
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43be900
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43bea00
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 1 env.Env @ [system] : #7f7fd43be200
debug(refcount): Header/onInit 1 1 env.Env @ [system] : #7f7fd43c2600
debug(refcount): incr 2 5 env.Env @ [system] : #7f7fd43b6200
debug(refcount): incr weak 2 6 env.Env @ [system] : #7f7fd43b6200
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 6 env.Env @ [system] : #7f7fd43b6200
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c2700
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c2800
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c2900
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c2a00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c2b00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c2c00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c2d00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_11514] : #7f7fd43c2e00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c2700
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_11514] : #7f7fd43c4000
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c2800
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_11514] : #7f7fd43c4100
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c2900
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_11514] : #7f7fd43c4200
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c2a00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_11514] : #7f7fd43c4300
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c2b00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_11514] : #7f7fd43c4400
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c2c00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_11514] : #7f7fd43c4500
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c2d00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43c4600
debug(refcount): incr 2 1 env.Env @ [system] : #7f7fd43c2600
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c2700
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c2800
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c2900
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c2a00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c2b00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c2c00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c2d00
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 1 env.Env @ [system] : #7f7fd43c2600
debug(refcount): Header/onInit 1 1 env.Env @ [system] : #7f7fd43c4700
debug(refcount): incr 2 6 env.Env @ [system] : #7f7fd43b6200
debug(refcount): incr weak 2 7 env.Env @ [system] : #7f7fd43b6200
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 7 env.Env @ [system] : #7f7fd43b6200
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c4800
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c4900
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c4a00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c4b00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c4c00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c4d00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c4e00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c4f00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c6000
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c6100
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c6200
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c6300
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c6400
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c6500
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c6600
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c6700
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c6800
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c6900
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c6a00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c6b00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c6c00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c6d00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c6e00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c6f00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c8000
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c8100
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c8200
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c8300
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c8400
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43c8500
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43c8600
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c4800
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43c8800
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c4900
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43c8900
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c4a00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43c8a00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c4b00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43c8b00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c4c00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43c8c00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c4d00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43c8d00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c4e00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43c8e00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c4f00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43c8f00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c6000
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43cc000
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c6100
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43cc100
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c6200
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43cc200
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c6300
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43cc300
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c6400
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43cc400
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c6500
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43cc500
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c6600
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43cc600
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c6700
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43cc700
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c6800
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43cc800
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c6900
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43cc900
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c6a00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43cca00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c6b00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43ccc00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c6c00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43ccd00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c6d00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43cce00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c6e00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43ccf00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c6f00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43d0000
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c8000
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43d0100
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c8100
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43d0200
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c8200
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43d0300
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c8300
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43d0400
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c8400
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13063] : #7f7fd43d0500
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43c8500
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43d0600
debug(refcount): incr 2 1 env.Env @ [system] : #7f7fd43c4700
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c4800
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c4900
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c4a00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c4b00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c4c00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c4d00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c4e00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c4f00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c6000
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c6100
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c6200
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c6300
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c6400
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c6500
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c6600
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c6700
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c6800
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c6900
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c6a00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c6b00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c6c00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c6d00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c6e00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c6f00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c8000
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c8100
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c8200
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c8300
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c8400
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43c8500
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 1 env.Env @ [system] : #7f7fd43c4700
debug(refcount): Header/onInit 1 1 env.Env @ [system] : #7f7fd43d0700
debug(refcount): incr 2 7 env.Env @ [system] : #7f7fd43b6200
debug(refcount): incr weak 2 8 env.Env @ [system] : #7f7fd43b6200
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 8 env.Env @ [system] : #7f7fd43b6200
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43d0800
debug(refcount): incr 2 1 env.Env @ [system] : #7f7fd43d0700
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 1 env.Env @ [system] : #7f7fd43d0700
debug(refcount): Header/onInit 1 1 env.Env @ [system] : #7f7fd43d0900
debug(refcount): incr 2 8 env.Env @ [system] : #7f7fd43b6200
debug(refcount): incr weak 2 9 env.Env @ [system] : #7f7fd43b6200
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 9 env.Env @ [system] : #7f7fd43b6200
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43d0a00
debug(refcount): incr 2 1 env.Env @ [system] : #7f7fd43d0900
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 1 env.Env @ [system] : #7f7fd43d0900
debug(refcount): Header/onInit 1 1 env.Env @ [system] : #7f7fd43d0b00
debug(refcount): incr 2 9 env.Env @ [system] : #7f7fd43b6200
debug(refcount): incr weak 2 10 env.Env @ [system] : #7f7fd43b6200
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 10 env.Env @ [system] : #7f7fd43b6200
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43d0c00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43d0d00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43d0e00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43d0f00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43d2000
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13542] : #7f7fd43d2100
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43d0c00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13542] : #7f7fd43d2300
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43d0d00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13542] : #7f7fd43d2400
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43d0e00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13542] : #7f7fd43d2500
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43d0f00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13542] : #7f7fd43d2600
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43d2000
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43d2700
debug(refcount): incr 2 1 env.Env @ [system] : #7f7fd43d0b00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43d0c00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43d0d00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43d0e00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43d0f00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43d2000
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 1 env.Env @ [system] : #7f7fd43d0b00
debug(refcount): Header/onInit 1 1 env.Env @ [system] : #7f7fd43d2800
debug(refcount): incr 2 10 env.Env @ [system] : #7f7fd43b6200
debug(refcount): incr weak 2 11 env.Env @ [system] : #7f7fd43b6200
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 11 env.Env @ [system] : #7f7fd43b6200
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43d2900
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13647] : #7f7fd43d2a00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43d2900
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43d2c00
debug(refcount): incr 2 1 env.Env @ [system] : #7f7fd43d2800
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43d2900
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 1 env.Env @ [system] : #7f7fd43d2800
debug(refcount): Header/onInit 1 1 env.Env @ [system] : #7f7fd43d2d00
debug(refcount): incr 2 11 env.Env @ [system] : #7f7fd43b6200
debug(refcount): incr weak 2 12 env.Env @ [system] : #7f7fd43b6200
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 12 env.Env @ [system] : #7f7fd43b6200
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43d2e00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43d2f00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13887] : #7f7fd43d6000
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43d2e00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [builtin-bindgen.Namespace__struct_13887] : #7f7fd43d6200
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43d2f00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43d6300
debug(refcount): incr 2 1 env.Env @ [system] : #7f7fd43d2d00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43d2e00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43d2f00
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 1 env.Env @ [system] : #7f7fd43d2d00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43d6400
debug(refcount): Header/onInit 1 1 root.Nil @ [system] : #7f7fd43d6500
debug(refcount): incr 2 1 root.Nil @ [system] : #7f7fd43d6500
debug(refcount): deinit Obj(root.Nil)
debug(refcount): decr 1 1 root.Nil @ [system] : #7f7fd43d6500
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43d6700
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43d6800
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43d6800
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43d6800
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43d6900
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43d6a00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43d6a00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43d6a00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43d6b00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43d6c00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43d6c00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43d6c00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43d6d00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43d6e00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43d6e00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43d6e00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43d6f00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43d8000
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43d8000
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43d8000
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43d8100
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43d8200
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43d8200
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43d8200
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43d8300
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43d8400
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43d8400
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43d8400
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43d8500
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43d8600
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43d8600
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43d8600
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43d8700
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43d8800
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43d8800
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43d8800
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43d8900
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43d8a00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43d8a00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43d8a00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43d8b00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43d8c00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43d8c00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43d8c00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43d8d00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43d8e00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43d8e00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43d8e00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43d8f00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43da000
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43da000
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43da000
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43da100
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43da200
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43da200
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43da200
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43da300
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43da400
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43da400
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43da400
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43da500
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43da600
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43da600
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43da600
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43da700
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43da800
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43da800
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43da800
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43da900
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43daa00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43daa00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43daa00
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [system] : #7f7fd43dab00
debug(refcount): Header/onInit 1 1 procedure.Procedure @ [system] : #7f7fd43dac00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43dac00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43dac00
debug(refcount): Header/onInit 1 1 interpreter.Interpreter @ [system] : #7f7fd43dae00
debug(evaluation): initializing Obj(Interpreter)7f7fd43dae90
debug(refcount): Header/onInit 1 1 env.Env @ [system] : #7f7fd43daf00
debug(refcount): incr 2 1 env.Env @ [system] : #7f7fd43b6100
debug(refcount): incr weak 2 2 env.Env @ [system] : #7f7fd43b6100
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 2 env.Env @ [system] : #7f7fd43b6100
debug(rml): ... interpreter ready
debug(main): rml initialized
info(main): test start
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43dc000
debug(rml): VTable/onFormat env.Env
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43dc100
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43dc100
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43dc100
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43dc100
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43dc100
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43dc200
debug(rml): VTable/onFormat env.Env
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43dc300
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43dc300
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43dc300
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43dc300
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43dc300
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43dc400
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43dc400
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43dc400
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43dc400
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43dc400
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43dc200
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43dc200
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43dc200
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43dc200
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43dc500
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43dc500
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43dc500
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43dc500
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43dc500
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43dc600
debug(rml): VTable/onFormat env.Env
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43dc700
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43dc700
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43dc700
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43dc700
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43dc700
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43dc800
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43dc800
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43dc800
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43dc800
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43dc800
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43dc900
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43dc900
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43dc900
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43dc900
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43dc900
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43dca00
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43dca00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43dca00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43dca00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43dca00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43dcb00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43dcb00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43dcb00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43dcb00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43dcb00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43dcc00
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43dcc00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43dcc00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43dcc00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43dcc00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43dcd00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43dcd00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43dcd00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43dcd00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43dcd00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43dce00
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43dce00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43dce00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43dce00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43dce00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43dc600
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43dc600
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43dc600
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43dc600
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43dcf00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43dcf00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43dcf00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43dcf00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43dcf00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43de000
debug(rml): VTable/onFormat env.Env
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43de100
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43de100
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43de100
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43de100
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43de100
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43de200
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43de200
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43de200
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43de200
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43de200
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43de300
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43de300
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43de300
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43de300
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43de300
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43de400
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43de400
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43de400
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43de400
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43de400
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43de500
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43de500
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43de500
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43de500
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43de500
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43de600
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43de600
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43de600
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43de600
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43de600
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43de700
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43de700
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43de700
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43de700
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43de700
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43de800
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43de800
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43de800
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43de800
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43de800
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43de900
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43de900
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43de900
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43de900
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43de900
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43dea00
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43dea00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43dea00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43dea00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43dea00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43deb00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43deb00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43deb00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43deb00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43deb00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43dec00
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43dec00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43dec00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43dec00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43dec00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43ded00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43ded00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43ded00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43ded00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43ded00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43dee00
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43dee00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43dee00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43dee00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43dee00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43def00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43def00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43def00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43def00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43def00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43e0000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43e0000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43e0000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43e0000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43e0000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43e2000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43e2000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43e2000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43e2000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43e2000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43e4000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43e4000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43e4000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43e4000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43e4000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43e6000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43e6000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43e6000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43e6000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43e6000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43e8000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43e8000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43e8000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43e8000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43e8000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43ea000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43ea000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43ea000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43ea000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43ea000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43ec000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43ec000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43ec000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43ec000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43ec000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43ee000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43ee000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43ee000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43ee000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43ee000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43f0000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43f0000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43f0000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43f0000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43f0000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43f2000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43f2000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43f2000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43f2000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43f2000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43f4000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43f4000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43f4000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43f4000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43f4000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43de000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43de000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43de000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43de000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43f6000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43f6000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43f6000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43f6000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43f6000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43f8000
debug(rml): VTable/onFormat env.Env
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43f8100
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43f8100
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43f8100
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43f8100
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43f8100
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43f8200
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43f8200
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43f8200
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43f8200
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43f8200
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43f8300
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43f8300
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43f8300
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43f8300
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43f8300
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43f8400
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43f8400
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43f8400
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43f8400
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43f8400
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43f8500
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43f8500
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43f8500
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43f8500
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43f8500
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43f8600
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43f8600
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43f8600
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43f8600
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43f8600
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43f8700
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43f8700
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43f8700
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43f8700
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43f8700
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43f8800
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43f8800
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43f8800
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43f8800
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43f8800
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43f8900
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43f8900
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43f8900
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43f8900
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43f8900
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43f8a00
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43f8a00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43f8a00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43f8a00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43f8a00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43f8b00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43f8b00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43f8b00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43f8b00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43f8b00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43f8c00
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43f8c00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43f8c00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43f8c00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43f8c00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43f8d00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43f8d00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43f8d00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43f8d00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43f8d00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43f8e00
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43f8e00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43f8e00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43f8e00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43f8e00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43f8f00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43f8f00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43f8f00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43f8f00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43f8f00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43fa000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43fa000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43fa000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43fa000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43fa000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43f8000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43f8000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43f8000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43f8000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43fc000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43fc000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43fc000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43fc000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43fc000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43fe000
debug(rml): VTable/onFormat env.Env
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43fe100
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43fe100
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43fe100
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43fe100
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43fe100
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43fe200
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43fe200
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43fe200
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43fe200
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43fe200
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43fe300
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43fe300
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43fe300
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43fe300
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43fe300
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43fe400
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43fe400
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43fe400
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43fe400
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43fe400
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43fe500
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43fe500
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43fe500
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43fe500
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43fe500
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43fe600
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43fe600
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43fe600
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43fe600
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43fe600
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43fe700
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43fe700
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43fe700
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43fe700
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43fe700
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43fe800
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43fe800
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43fe800
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43fe800
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43fe800
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43fe900
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43fe900
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43fe900
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43fe900
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43fe900
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43fea00
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43fea00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43fea00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43fea00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43fea00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43feb00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43feb00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43feb00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43feb00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43feb00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43fec00
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43fec00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43fec00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43fec00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43fec00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43fed00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43fed00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43fed00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43fed00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43fed00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd43fee00
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43fee00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43fee00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43fee00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43fee00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43fe000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43fe000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43fe000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43fe000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4400000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4400000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4400000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4400000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4400000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4402000
debug(rml): VTable/onFormat env.Env
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4402100
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4402100
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4402100
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4402100
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4402100
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4402200
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4402200
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4402200
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4402200
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4402200
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4402300
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4402300
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4402300
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4402300
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4402300
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4402400
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4402400
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4402400
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4402400
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4402400
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4402500
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4402500
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4402500
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4402500
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4402500
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4402600
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4402600
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4402600
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4402600
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4402600
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4402700
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4402700
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4402700
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4402700
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4402700
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4402800
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4402800
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4402800
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4402800
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4402800
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4402900
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4402900
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4402900
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4402900
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4402900
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4402a00
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4402a00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4402a00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4402a00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4402a00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4402b00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4402b00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4402b00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4402b00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4402b00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4402c00
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4402c00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4402c00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4402c00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4402c00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4402d00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4402d00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4402d00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4402d00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4402d00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4402e00
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4402e00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4402e00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4402e00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4402e00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4402f00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4402f00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4402f00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4402f00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4402f00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4404000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4404000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4404000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4404000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4404000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4406000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4406000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4406000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4406000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4406000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4408000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4408000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4408000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4408000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4408000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd440a000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd440a000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd440a000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd440a000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd440a000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd440c000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd440c000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd440c000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd440c000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd440c000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd440e000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd440e000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd440e000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd440e000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd440e000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4410000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4410000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4410000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4410000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4410000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4412000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4412000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4412000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4412000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4412000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4414000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4414000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4414000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4414000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4414000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4416000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4416000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4416000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4416000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4416000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4418000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4418000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4418000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4418000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4418000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd441a000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd441a000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd441a000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd441a000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd441a000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd441c000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd441c000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd441c000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd441c000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd441c000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd441e000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd441e000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd441e000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd441e000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd441e000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4420000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4420000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4420000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4420000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4420000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4422000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4422000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4422000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4422000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4422000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4424000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4424000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4424000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4424000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4424000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4426000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4426000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4426000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4426000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4426000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4428000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4428000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4428000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4428000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4428000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd442a000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd442a000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd442a000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd442a000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd442a000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd442c000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd442c000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd442c000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd442c000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd442c000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd442e000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd442e000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd442e000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd442e000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd442e000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4430000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4430000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4430000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4430000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4430000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4432000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4432000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4432000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4432000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4432000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4434000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4434000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4434000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4434000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4434000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4436000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4436000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4436000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4436000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4436000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4438000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4438000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4438000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4438000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4438000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd443a000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd443a000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd443a000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd443a000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd443a000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd443c000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd443c000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd443c000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd443c000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd443c000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd443e000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd443e000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd443e000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd443e000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd443e000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4440000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4440000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4440000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4440000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4440000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4442000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4442000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4442000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4442000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4442000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4444000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4444000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4444000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4444000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4444000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4446000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4446000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4446000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4446000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4446000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4448000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4448000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4448000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4448000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4448000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd444a000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd444a000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd444a000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd444a000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd444a000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd444c000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd444c000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd444c000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd444c000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd444c000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd444e000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd444e000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd444e000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd444e000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd444e000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4450000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4450000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4450000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4450000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4450000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4452000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4452000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4452000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4452000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4452000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4454000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4454000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4454000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4454000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4454000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4456000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4456000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4456000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4456000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4456000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4458000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4458000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4458000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4458000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4458000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd445a000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd445a000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd445a000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd445a000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd445a000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd445c000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd445c000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd445c000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd445c000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd445c000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4402000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4402000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4402000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4402000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd445e000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd445e000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd445e000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd445e000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd445e000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4460000
debug(rml): VTable/onFormat env.Env
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4460000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4460000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4460000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4460000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4462000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4462000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4462000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4462000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4462000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4464000
debug(rml): VTable/onFormat env.Env
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4464000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4464000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4464000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4464000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4466000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4466000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4466000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4466000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4466000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4468000
debug(rml): VTable/onFormat env.Env
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4468100
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4468100
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4468100
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4468100
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4468100
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4468200
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4468200
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4468200
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4468200
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4468200
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4468300
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4468300
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4468300
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4468300
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4468300
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4468400
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4468400
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4468400
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4468400
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4468400
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4468500
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4468500
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4468500
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4468500
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4468500
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4468600
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4468600
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4468600
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4468600
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4468600
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4468700
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4468700
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4468700
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4468700
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4468700
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4468800
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4468800
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4468800
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4468800
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4468800
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4468900
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4468900
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4468900
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4468900
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4468900
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4468a00
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4468a00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4468a00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4468a00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4468a00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4468000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4468000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4468000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4468000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd446a000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd446a000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd446a000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd446a000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd446a000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd446c000
debug(rml): VTable/onFormat env.Env
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd446c100
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd446c100
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd446c100
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd446c100
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd446c100
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd446c200
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd446c200
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd446c200
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd446c200
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd446c200
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd446c000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd446c000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd446c000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd446c000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd446e000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd446e000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd446e000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd446e000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd446e000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4470000
debug(rml): VTable/onFormat env.Env
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4470100
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4470100
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4470100
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4470100
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4470100
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4470200
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4470200
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4470200
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4470200
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4470200
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4470300
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4470300
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4470300
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4470300
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4470300
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4470400
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4470400
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4470400
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4470400
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4470400
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4470000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4470000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4470000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4470000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd43dc000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd43dc000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd43dc000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd43dc000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(main): namespace_env: (Array (append [native_function-7f7fd43b6490])) (Block (length [native_function-7f7fd43b6a90]) (items [native_function-7f7fd43b6b90]) (append [native_function-7f7fd43b6c90]) (appendSlice [native_function-7f7fd43b6d90])) (Env (bind [native_function-7f7fd43b8590]) (set [native_function-7f7fd43b8690]) (setLocal [native_function-7f7fd43b8790]) (setInParent [native_function-7f7fd43b8890]) (get [native_function-7f7fd43b8990]) (getLocal [native_function-7f7fd43b8a90]) (getInParent [native_function-7f7fd43b8b90]) (length [native_function-7f7fd43b8c90]) (localLength [native_function-7f7fd43b8d90]) (parentLength [native_function-7f7fd43b8e90]) (contains [native_function-7f7fd43b8f90]) (containsLocal [native_function-7f7fd43ba090]) (containsInParent [native_function-7f7fd43ba190])) (Interpreter (reset [native_function-7f7fd43be390]) (eval [native_function-7f7fd43be490]) (evalAll [native_function-7f7fd43be590]) (evalAllCheck [native_function-7f7fd43be690]) (evalCheck [native_function-7f7fd43be790]) (lookup [native_function-7f7fd43be890]) (runProgram [native_function-7f7fd43be990]) (invoke [native_function-7f7fd43bea90])) (Map (set [native_function-7f7fd43c2790]) (get [native_function-7f7fd43c2890]) (length [native_function-7f7fd43c2990]) (contains [native_function-7f7fd43c2a90]) (keys [native_function-7f7fd43c2b90]) (values [native_function-7f7fd43c2c90]) (reIndex [native_function-7f7fd43c2d90])) (Parser (next [native_function-7f7fd43c4890]) (setOffset [native_function-7f7fd43c4990]) (clearOffset [native_function-7f7fd43c4a90]) (getOrigin [native_function-7f7fd43c4b90]) (parseObject [native_function-7f7fd43c4c90]) (parseAtom [native_function-7f7fd43c4d90]) (parseAnyBlock [native_function-7f7fd43c4e90]) (parseBlock [native_function-7f7fd43c4f90]) (parseAnyBlockOpening [native_function-7f7fd43c6090]) (parseAnyBlockClosing [native_function-7f7fd43c6190]) (parseBlockOpening [native_function-7f7fd43c6290]) (parseBlockClosing [native_function-7f7fd43c6390]) (parseInt [native_function-7f7fd43c6490]) (parseFloat [native_function-7f7fd43c6590]) (parseChar [native_function-7f7fd43c6690]) (parseString [native_function-7f7fd43c6790]) (parseSymbol [native_function-7f7fd43c6890]) (expectChar [native_function-7f7fd43c6990]) (expectAnyChar [native_function-7f7fd43c6a90]) (expectSlice [native_function-7f7fd43c6b90]) (expectEscape [native_function-7f7fd43c6c90]) (expectDecimalDigit [native_function-7f7fd43c6d90]) (scan [native_function-7f7fd43c6e90]) (reset [native_function-7f7fd43c6f90]) (failed [native_function-7f7fd43c8090]) (isBof [native_function-7f7fd43c8190]) (isEof [native_function-7f7fd43c8290]) (peekChar [native_function-7f7fd43c8390]) (nextChar [native_function-7f7fd43c8490]) (advChar [native_function-7f7fd43c8590])) (Pattern ) (Procedure ) (String (text [native_function-7f7fd43d0c90]) (length [native_function-7f7fd43d0d90]) (append [native_function-7f7fd43d0e90]) (appendSlice [native_function-7f7fd43d0f90]) (makeInternedSlice [native_function-7f7fd43d2090])) (Symbol (text [native_function-7f7fd43d2990])) (Writer (write [native_function-7f7fd43d2e90]) (writeAll [native_function-7f7fd43d2f90]))
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4472000
debug(rml): VTable/onFormat env.Env
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4472100
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4472100
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4472100
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4472100
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4472100
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4472200
debug(rml): VTable/onFormat root.Nil
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4472200
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4472200
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4472200
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4472200
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4472300
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4472300
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4472300
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4472300
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4472300
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4472400
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4472400
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4472400
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4472400
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4472400
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4472500
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4472500
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4472500
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4472500
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4472500
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4472600
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4472600
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4472600
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4472600
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4472600
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4472700
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4472700
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4472700
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4472700
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4472700
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4472800
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4472800
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4472800
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4472800
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4472800
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4472900
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4472900
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4472900
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4472900
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4472900
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4472a00
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4472a00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4472a00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4472a00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4472a00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4472b00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4472b00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4472b00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4472b00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4472b00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4472c00
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4472c00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4472c00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4472c00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4472c00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4472d00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4472d00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4472d00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4472d00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4472d00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4472e00
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4472e00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4472e00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4472e00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4472e00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4472f00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4472f00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4472f00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4472f00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4472f00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4474000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4474000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4474000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4474000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4474000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4476000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4476000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4476000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4476000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4476000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4478000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4478000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4478000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4478000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4478000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd447a000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd447a000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd447a000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd447a000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd447a000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd447c000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd447c000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd447c000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd447c000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd447c000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd447e000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd447e000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd447e000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd447e000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd447e000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4480000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4480000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4480000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4480000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4480000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4482000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4482000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4482000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4482000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4482000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4484000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4484000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4484000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4484000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4484000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4486000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4486000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4486000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4486000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4486000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4488000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4488000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4488000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4488000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4488000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd448a000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd448a000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd448a000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd448a000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd448a000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd448c000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd448c000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd448c000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd448c000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd448c000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd448e000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd448e000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd448e000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd448e000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd448e000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4490000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4490000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4490000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4490000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4490000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4492000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4492000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4492000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4492000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4492000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4494000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4494000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4494000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4494000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4494000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4496000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4496000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4496000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4496000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4496000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd4498000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4498000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4498000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4498000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4498000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd449a000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd449a000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd449a000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd449a000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd449a000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd449c000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd449c000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd449c000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd449c000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd449c000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd449e000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd449e000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd449e000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd449e000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd449e000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd44a0000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd44a0000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd44a0000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd44a0000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd44a0000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd44a2000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd44a2000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd44a2000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd44a2000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd44a2000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd44a4000
debug(rml): VTable/onFormat procedure.Procedure
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd44a4000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd44a4000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd44a4000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd44a4000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd4472000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd4472000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd4472000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd4472000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(main): global_env: (nil root.Nil{ }) (print-ln [native_function-7f7fd43d6890]) (print [native_function-7f7fd43d6a90]) (add [native_function-7f7fd43d6c90]) (+ [native_function-7f7fd43d6e90]) (sub [native_function-7f7fd43d8090]) (- [native_function-7f7fd43d8290]) (div [native_function-7f7fd43d8490]) (/ [native_function-7f7fd43d8690]) (mul [native_function-7f7fd43d8890]) (* [native_function-7f7fd43d8a90]) (rem [native_function-7f7fd43d8c90]) (pow [native_function-7f7fd43d8e90]) (bnot [native_function-7f7fd43da090]) (band [native_function-7f7fd43da290]) (bor [native_function-7f7fd43da490]) (bxor [native_function-7f7fd43da690]) (not [native_function-7f7fd43da890]) (and [native_macro-7f7fd43daa90]) (or [native_macro-7f7fd43dac90])
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd44a6000
debug(rml): VTable/onFormat env.Env
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd44a6000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd44a6000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd44a6000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd44a6000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(main): evaluation_env: 
debug(refcount): Header/onInit 1 1 string.String @ [system] : #7f7fd44a8000
debug(refcount): Header/onInit 1 1 parser.Parser @ [system] : #7f7fd44a8100
debug(parsing): creating Parser7f7fd44a8190
debug(parsing): checking for eof
debug(parsing): eof: false
debug(parsing): parseObject (
debug(parsing): parseAtom
debug(parsing): parseInt (
debug(parsing): parseInt reset: no digits
debug(parsing): parseFloat (
debug(parsing): parseFloat reset: no frac
debug(parsing): parseChar (
debug(parsing): parseChar stop: expected '''
debug(parsing): parseString (
debug(parsing): parseString stop: expected '"'
debug(parsing): parseSymbol reset: nothing recognized
debug(parsing): parseAtom result: null
debug(parsing): parseBlock
debug(parsing): got block opening (
debug(parsing): got block opening (
debug(parsing): checking for )
debug(parsing): ): false
debug(parsing): parseObject p
debug(parsing): parseAtom
debug(parsing): parseInt p
debug(parsing): parseInt reset: no digits
debug(parsing): parseFloat p
debug(parsing): parseFloat reset: no frac
debug(parsing): parseChar p
debug(parsing): parseChar stop: expected '''
debug(parsing): parseString p
debug(parsing): parseString stop: expected '"'
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [test.rml:1:2-10] : #7f7fd44a8200
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd44a8300
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd44a8300
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd44a8300
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd44a8300
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd44a8300
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(parsing): parseSymbol result: print-ln
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd44a8400
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd44a8400
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd44a8400
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd44a8400
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd44a8400
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(parsing): parseAtom result: print-ln
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd44a8500
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd44a8500
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd44a8500
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd44a8500
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd44a8500
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(parsing): parseObject result: print-ln
debug(parsing): checking for )
debug(parsing): ): false
debug(parsing): parseObject "
debug(parsing): parseAtom
debug(parsing): parseInt "
debug(parsing): parseInt reset: no digits
debug(parsing): parseFloat "
debug(parsing): parseFloat reset: no frac
debug(parsing): parseChar "
debug(parsing): parseChar stop: expected '''
debug(parsing): parseString "
debug(parsing): parseString result: Hello, world!
debug(refcount): Header/onInit 1 1 string.String @ [test.rml:1:11-26] : #7f7fd44a8600
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd44a8700
debug(rml): VTable/onFormat string.String
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd44a8700
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd44a8700
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd44a8700
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd44a8700
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(parsing): parseAtom result: "Hello, world!"
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd44a8800
debug(rml): VTable/onFormat string.String
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd44a8800
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd44a8800
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd44a8800
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd44a8800
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(parsing): parseObject result: "Hello, world!"
debug(parsing): checking for )
debug(parsing): ): false
debug(parsing): parseObject (
debug(parsing): parseAtom
debug(parsing): parseInt (
debug(parsing): parseInt reset: no digits
debug(parsing): parseFloat (
debug(parsing): parseFloat reset: no frac
debug(parsing): parseChar (
debug(parsing): parseChar stop: expected '''
debug(parsing): parseString (
debug(parsing): parseString stop: expected '"'
debug(parsing): parseSymbol reset: nothing recognized
debug(parsing): parseAtom result: null
debug(parsing): parseBlock
debug(parsing): got block opening (
debug(parsing): got block opening (
debug(parsing): checking for )
debug(parsing): ): false
debug(parsing): parseObject o
debug(parsing): parseAtom
debug(parsing): parseInt o
debug(parsing): parseInt reset: no digits
debug(parsing): parseFloat o
debug(parsing): parseFloat reset: no frac
debug(parsing): parseChar o
debug(parsing): parseChar stop: expected '''
debug(parsing): parseString o
debug(parsing): parseString stop: expected '"'
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [test.rml:1:28-30] : #7f7fd44a8900
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd44a8a00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd44a8a00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd44a8a00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd44a8a00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd44a8a00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(parsing): parseSymbol result: or
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd44a8b00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd44a8b00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd44a8b00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd44a8b00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd44a8b00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(parsing): parseAtom result: or
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd44a8c00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd44a8c00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd44a8c00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd44a8c00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd44a8c00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(parsing): parseObject result: or
debug(parsing): checking for )
debug(parsing): ): false
debug(parsing): parseObject n
debug(parsing): parseAtom
debug(parsing): parseInt n
debug(parsing): parseInt reset: no digits
debug(parsing): parseFloat n
debug(parsing): parseFloat reset: no frac
debug(parsing): parseChar n
debug(parsing): parseChar stop: expected '''
debug(parsing): parseString n
debug(parsing): parseString stop: expected '"'
debug(refcount): Header/onInit 1 1 symbol.Symbol @ [test.rml:1:31-34] : #7f7fd44a8d00
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd44a8e00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd44a8e00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd44a8e00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd44a8e00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd44a8e00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(parsing): parseSymbol result: nil
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd44a8f00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd44a8f00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd44a8f00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd44a8f00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd44a8f00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(parsing): parseAtom result: nil
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6590000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6590000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6590000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6590000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6590000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(parsing): parseObject result: nil
debug(parsing): checking for )
debug(parsing): ): false
debug(parsing): parseObject 1
debug(parsing): parseAtom
debug(parsing): parseInt 1
debug(refcount): Header/onInit 1 1 i64 @ [test.rml:1:35-37] : #7f7fd6592000
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6592100
debug(rml): VTable/onFormat i64
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6592100
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6592100
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6592100
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6592100
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(parsing): parseInt result: 10
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6592200
debug(rml): VTable/onFormat i64
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6592200
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6592200
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6592200
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6592200
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(parsing): parseAtom result: 10
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6592300
debug(rml): VTable/onFormat i64
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6592300
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6592300
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6592300
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6592300
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(parsing): parseObject result: 10
debug(parsing): checking for )
debug(parsing): ): true
debug(refcount): Header/onInit 1 1 block.Block @ [test.rml:1:27-38] : #7f7fd6592400
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6592500
debug(rml): VTable/onFormat block.Block
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6592600
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6592600
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6592600
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6592600
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6592600
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6592700
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6592700
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6592700
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6592700
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6592700
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6592800
debug(rml): VTable/onFormat i64
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6592800
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6592800
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6592800
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6592800
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6592500
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6592500
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6592500
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6592500
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(parsing): parseBlock result: (or nil 10)
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6592900
debug(rml): VTable/onFormat block.Block
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6592a00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6592a00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6592a00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6592a00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6592a00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6592b00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6592b00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6592b00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6592b00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6592b00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6592c00
debug(rml): VTable/onFormat i64
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6592c00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6592c00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6592c00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6592c00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6592900
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6592900
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6592900
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6592900
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(parsing): parseObject result: (or nil 10)
debug(parsing): checking for )
debug(parsing): ): true
debug(refcount): Header/onInit 1 1 block.Block @ [test.rml:1:1-39] : #7f7fd6592d00
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6592e00
debug(rml): VTable/onFormat block.Block
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6592f00
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6592f00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6592f00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6592f00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6592f00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6594000
debug(rml): VTable/onFormat string.String
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6594000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6594000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6594000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6594000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6596000
debug(rml): VTable/onFormat block.Block
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6596100
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6596100
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6596100
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6596100
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6596100
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6596200
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6596200
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6596200
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6596200
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6596200
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6596300
debug(rml): VTable/onFormat i64
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6596300
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6596300
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6596300
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6596300
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6596000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6596000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6596000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6596000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6592e00
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6592e00
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6592e00
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6592e00
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(parsing): parseBlock result: (print-ln "Hello, world!" (or nil 10))
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6598000
debug(rml): VTable/onFormat block.Block
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6598100
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6598100
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6598100
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6598100
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6598100
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6598200
debug(rml): VTable/onFormat string.String
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6598200
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6598200
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6598200
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6598200
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6598300
debug(rml): VTable/onFormat block.Block
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6598400
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6598400
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6598400
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6598400
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6598400
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6598500
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6598500
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6598500
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6598500
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6598500
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd6598600
debug(rml): VTable/onFormat i64
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6598600
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6598600
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6598600
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6598600
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6598300
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6598300
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6598300
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6598300
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd6598000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd6598000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd6598000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd6598000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(parsing): parseObject result: (print-ln "Hello, world!" (or nil 10))
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd659a000
debug(rml): VTable/onFormat block.Block
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd659a100
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd659a100
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd659a100
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd659a100
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd659a100
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd659a200
debug(rml): VTable/onFormat string.String
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd659a200
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd659a200
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd659a200
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd659a200
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd659a300
debug(rml): VTable/onFormat block.Block
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd659a400
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd659a400
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd659a400
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd659a400
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd659a400
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd659a500
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd659a500
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd659a500
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd659a500
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd659a500
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd659a600
debug(rml): VTable/onFormat i64
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd659a600
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd659a600
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd659a600
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd659a600
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd659a300
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd659a300
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd659a300
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd659a300
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd659a000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd659a000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd659a000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd659a000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
info(main): expr: (print-ln "Hello, world!" (or nil 10))
debug(refcount): incr 2 1 block.Block @ [test.rml:1:1-39] : #7f7fd6592d00
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd659c000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd659c000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd659c000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd659c000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd659c000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd659e000
debug(rml): VTable/onFormat string.String
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd659e000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd659e000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd659e000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd659e000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd65a0000
debug(rml): VTable/onFormat block.Block
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd65a0100
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd65a0100
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd65a0100
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd65a0100
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd65a0100
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd65a0200
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd65a0200
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd65a0200
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd65a0200
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd65a0200
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd65a0300
debug(rml): VTable/onFormat i64
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd65a0300
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd65a0300
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd65a0300
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd65a0300
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd65a0000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd65a0000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd65a0000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd65a0000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(evaluation): performing call { print-ln, "Hello, world!", (or nil 10) }
debug(refcount): incr 2 1 symbol.Symbol @ [test.rml:1:2-10] : #7f7fd44a8200
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd65a2000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd65a2000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd65a2000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd65a2000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd65a2000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(evaluation): looking up symbol print-ln
debug(refcount): incr 2 2 env.Env @ [system] : #7f7fd43b6100
debug(refcount): incr 3 2 env.Env @ [system] : #7f7fd43b6100
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 2 2 env.Env @ [system] : #7f7fd43b6100
debug(refcount): getObj
debug(refcount): incr 2 1 symbol.Symbol @ [system] : #7f7fd43d6700
debug(rml): VTable/onCompare symbol.Symbol
debug(refcount): incr 3 1 symbol.Symbol @ [system] : #7f7fd43d6700
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 2 1 symbol.Symbol @ [system] : #7f7fd43d6700
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 1 1 symbol.Symbol @ [system] : #7f7fd43d6700
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43d6800
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 2 env.Env @ [system] : #7f7fd43b6100
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 1 1 symbol.Symbol @ [test.rml:1:2-10] : #7f7fd44a8200
debug(refcount): incr 3 1 procedure.Procedure @ [system] : #7f7fd43d6800
debug(evaluation): cannot evaluate further
debug(refcount): incr 2 1 string.String @ [test.rml:1:11-26] : #7f7fd44a8600
debug(refcount): incr 2 1 block.Block @ [test.rml:1:27-38] : #7f7fd6592400
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd65a4000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd65a4000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd65a4000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd65a4000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd65a4000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd65a6000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd65a6000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd65a6000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd65a6000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd65a6000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd65a8000
debug(rml): VTable/onFormat i64
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd65a8000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd65a8000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd65a8000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd65a8000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(evaluation): performing call { or, nil, 10 }
debug(refcount): incr 2 1 symbol.Symbol @ [test.rml:1:28-30] : #7f7fd44a8900
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd65aa000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd65aa000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd65aa000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd65aa000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd65aa000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(evaluation): looking up symbol or
debug(refcount): incr 2 2 env.Env @ [system] : #7f7fd43b6100
debug(refcount): incr 3 2 env.Env @ [system] : #7f7fd43b6100
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 2 2 env.Env @ [system] : #7f7fd43b6100
debug(refcount): getObj
debug(refcount): incr 2 1 symbol.Symbol @ [system] : #7f7fd43dab00
debug(rml): VTable/onCompare symbol.Symbol
debug(refcount): incr 3 1 symbol.Symbol @ [system] : #7f7fd43dab00
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 2 1 symbol.Symbol @ [system] : #7f7fd43dab00
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 1 1 symbol.Symbol @ [system] : #7f7fd43dab00
debug(refcount): incr 2 1 procedure.Procedure @ [system] : #7f7fd43dac00
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 2 env.Env @ [system] : #7f7fd43b6100
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 1 1 symbol.Symbol @ [test.rml:1:28-30] : #7f7fd44a8900
debug(refcount): incr 3 1 procedure.Procedure @ [system] : #7f7fd43dac00
debug(refcount): incr 2 1 symbol.Symbol @ [test.rml:1:31-34] : #7f7fd44a8d00
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd65ac000
debug(rml): VTable/onFormat symbol.Symbol
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd65ac000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd65ac000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd65ac000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd65ac000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(evaluation): looking up symbol nil
debug(refcount): incr 2 2 env.Env @ [system] : #7f7fd43b6100
debug(refcount): incr 3 2 env.Env @ [system] : #7f7fd43b6100
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 2 2 env.Env @ [system] : #7f7fd43b6100
debug(refcount): getObj
debug(refcount): incr 2 1 symbol.Symbol @ [system] : #7f7fd43d6400
debug(rml): VTable/onCompare symbol.Symbol
debug(refcount): incr 3 1 symbol.Symbol @ [system] : #7f7fd43d6400
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 2 1 symbol.Symbol @ [system] : #7f7fd43d6400
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 1 1 symbol.Symbol @ [system] : #7f7fd43d6400
debug(refcount): incr 2 1 root.Nil @ [system] : #7f7fd43d6500
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 1 2 env.Env @ [system] : #7f7fd43b6100
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 1 1 symbol.Symbol @ [test.rml:1:31-34] : #7f7fd44a8d00
debug(refcount): deinit Obj(root.Nil)
debug(refcount): decr 1 1 root.Nil @ [system] : #7f7fd43d6500
debug(evaluation): cannot evaluate further
debug(refcount): incr 2 1 i64 @ [test.rml:1:35-37] : #7f7fd6592000
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 2 1 procedure.Procedure @ [system] : #7f7fd43dac00
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43dac00
debug(refcount): deinit Obj(block.Block)
debug(refcount): decr 1 1 block.Block @ [test.rml:1:27-38] : #7f7fd6592400
debug(refcount): Header/onInit 1 1 writer.Writer @ [test.rml:1:1-39] : #7f7fd65ae000
[test.rml:1:1-39]: debug(rml): VTable/onFormat string.String
"Hello, world!"debug(rml): VTable/onFormat i64
10
debug(refcount): Header/onInit 1 1 root.Nil @ [test.rml:1:1-39] : #7f7fd65ae100
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [test.rml:1:1-39] : #7f7fd65ae000
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [test.rml:1:1-39] : #7f7fd65ae000
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [test.rml:1:1-39] : #7f7fd65ae000
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [test.rml:1:1-39] : #7f7fd65ae000
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
debug(refcount): deinit Obj(string.String)
debug(refcount): decr 1 1 string.String @ [test.rml:1:11-26] : #7f7fd44a8600
debug(refcount): deinit Obj(i64)
debug(refcount): decr 1 1 i64 @ [test.rml:1:35-37] : #7f7fd6592000
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 2 1 procedure.Procedure @ [system] : #7f7fd43d6800
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 1 1 procedure.Procedure @ [system] : #7f7fd43d6800
debug(refcount): deinit Obj(block.Block)
debug(refcount): decr 1 1 block.Block @ [test.rml:1:1-39] : #7f7fd6592d00
debug(refcount): Header/onInit 1 1 writer.Writer @ [system] : #7f7fd65ae200
debug(rml): VTable/onFormat root.Nil
debug(refcount): deinit Obj(writer.Writer)
debug(refcount): decr 0 1 writer.Writer @ [system] : #7f7fd65ae200
debug(refcount): Header/onDeinit 0 1 writer.Writer @ [system] : #7f7fd65ae200
debug(rml): VTable/onDeinit writer.Writer
debug(refcount): writer.Writer/onDeinit-auto
debug(refcount): decr weak 0 0 writer.Writer @ [system] : #7f7fd65ae200
debug(refcount): Header/onDestroy 0 0 writer.Writer @ [system] : #7f7fd65ae200
debug(rml): VTable/onDestroy writer.Writer
debug(rml): (ObjMemory writer.Writer)/onDestroy
info(main): result: root.Nil{ }
debug(refcount): deinit Obj(root.Nil)
debug(refcount): decr 0 1 root.Nil @ [test.rml:1:1-39] : #7f7fd65ae100
debug(refcount): Header/onDeinit 0 1 root.Nil @ [test.rml:1:1-39] : #7f7fd65ae100
debug(rml): VTable/onDeinit root.Nil
debug(refcount): root.Nil/onDeinit-auto
debug(refcount): decr weak 0 0 root.Nil @ [test.rml:1:1-39] : #7f7fd65ae100
debug(refcount): Header/onDestroy 0 0 root.Nil @ [test.rml:1:1-39] : #7f7fd65ae100
debug(rml): VTable/onDestroy root.Nil
debug(rml): (ObjMemory root.Nil)/onDestroy
debug(refcount): deinit Obj(block.Block)
debug(refcount): decr 0 1 block.Block @ [test.rml:1:1-39] : #7f7fd6592d00
debug(refcount): Header/onDeinit 0 1 block.Block @ [test.rml:1:1-39] : #7f7fd6592d00
debug(rml): VTable/onDeinit block.Block
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 0 1 symbol.Symbol @ [test.rml:1:2-10] : #7f7fd44a8200
debug(refcount): Header/onDeinit 0 1 symbol.Symbol @ [test.rml:1:2-10] : #7f7fd44a8200
debug(rml): VTable/onDeinit symbol.Symbol
debug(refcount): symbol.Symbol/onDeinit-auto
debug(refcount): decr weak 0 0 symbol.Symbol @ [test.rml:1:2-10] : #7f7fd44a8200
debug(refcount): Header/onDestroy 0 0 symbol.Symbol @ [test.rml:1:2-10] : #7f7fd44a8200
debug(rml): VTable/onDestroy symbol.Symbol
debug(rml): (ObjMemory symbol.Symbol)/onDestroy
debug(refcount): deinit Obj(string.String)
debug(refcount): decr 0 1 string.String @ [test.rml:1:11-26] : #7f7fd44a8600
debug(refcount): Header/onDeinit 0 1 string.String @ [test.rml:1:11-26] : #7f7fd44a8600
debug(rml): VTable/onDeinit string.String
debug(refcount): decr weak 0 0 string.String @ [test.rml:1:11-26] : #7f7fd44a8600
debug(refcount): Header/onDestroy 0 0 string.String @ [test.rml:1:11-26] : #7f7fd44a8600
debug(rml): VTable/onDestroy string.String
debug(rml): (ObjMemory string.String)/onDestroy
debug(refcount): deinit Obj(block.Block)
debug(refcount): decr 0 1 block.Block @ [test.rml:1:27-38] : #7f7fd6592400
debug(refcount): Header/onDeinit 0 1 block.Block @ [test.rml:1:27-38] : #7f7fd6592400
debug(rml): VTable/onDeinit block.Block
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 0 1 symbol.Symbol @ [test.rml:1:28-30] : #7f7fd44a8900
debug(refcount): Header/onDeinit 0 1 symbol.Symbol @ [test.rml:1:28-30] : #7f7fd44a8900
debug(rml): VTable/onDeinit symbol.Symbol
debug(refcount): symbol.Symbol/onDeinit-auto
debug(refcount): decr weak 0 0 symbol.Symbol @ [test.rml:1:28-30] : #7f7fd44a8900
debug(refcount): Header/onDestroy 0 0 symbol.Symbol @ [test.rml:1:28-30] : #7f7fd44a8900
debug(rml): VTable/onDestroy symbol.Symbol
debug(rml): (ObjMemory symbol.Symbol)/onDestroy
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 0 1 symbol.Symbol @ [test.rml:1:31-34] : #7f7fd44a8d00
debug(refcount): Header/onDeinit 0 1 symbol.Symbol @ [test.rml:1:31-34] : #7f7fd44a8d00
debug(rml): VTable/onDeinit symbol.Symbol
debug(refcount): symbol.Symbol/onDeinit-auto
debug(refcount): decr weak 0 0 symbol.Symbol @ [test.rml:1:31-34] : #7f7fd44a8d00
debug(refcount): Header/onDestroy 0 0 symbol.Symbol @ [test.rml:1:31-34] : #7f7fd44a8d00
debug(rml): VTable/onDestroy symbol.Symbol
debug(rml): (ObjMemory symbol.Symbol)/onDestroy
debug(refcount): deinit Obj(i64)
debug(refcount): decr 0 1 i64 @ [test.rml:1:35-37] : #7f7fd6592000
debug(refcount): Header/onDeinit 0 1 i64 @ [test.rml:1:35-37] : #7f7fd6592000
debug(rml): VTable/onDeinit i64
debug(refcount): i64/onDeinit-auto
debug(refcount): decr weak 0 0 i64 @ [test.rml:1:35-37] : #7f7fd6592000
debug(refcount): Header/onDestroy 0 0 i64 @ [test.rml:1:35-37] : #7f7fd6592000
debug(rml): VTable/onDestroy i64
debug(rml): (ObjMemory i64)/onDestroy
debug(refcount): decr weak 0 0 block.Block @ [test.rml:1:27-38] : #7f7fd6592400
debug(refcount): Header/onDestroy 0 0 block.Block @ [test.rml:1:27-38] : #7f7fd6592400
debug(rml): VTable/onDestroy block.Block
debug(rml): (ObjMemory block.Block)/onDestroy
debug(refcount): decr weak 0 0 block.Block @ [test.rml:1:1-39] : #7f7fd6592d00
debug(refcount): Header/onDestroy 0 0 block.Block @ [test.rml:1:1-39] : #7f7fd6592d00
debug(rml): VTable/onDestroy block.Block
debug(rml): (ObjMemory block.Block)/onDestroy
debug(parsing): checking for eof
debug(parsing): eof: true
debug(main): Deinitializing parser
debug(refcount): deinit Obj(parser.Parser)
debug(refcount): decr 0 1 parser.Parser @ [system] : #7f7fd44a8100
debug(refcount): Header/onDeinit 0 1 parser.Parser @ [system] : #7f7fd44a8100
debug(rml): VTable/onDeinit parser.Parser
debug(refcount): deinit Obj(string.String)
debug(refcount): decr 0 1 string.String @ [system] : #7f7fd44a8000
debug(refcount): Header/onDeinit 0 1 string.String @ [system] : #7f7fd44a8000
debug(rml): VTable/onDeinit string.String
debug(refcount): decr weak 0 0 string.String @ [system] : #7f7fd44a8000
debug(refcount): Header/onDestroy 0 0 string.String @ [system] : #7f7fd44a8000
debug(rml): VTable/onDestroy string.String
debug(rml): (ObjMemory string.String)/onDestroy
debug(refcount): decr weak 0 0 parser.Parser @ [system] : #7f7fd44a8100
debug(refcount): Header/onDestroy 0 0 parser.Parser @ [system] : #7f7fd44a8100
debug(rml): VTable/onDestroy parser.Parser
debug(rml): (ObjMemory parser.Parser)/onDestroy
debug(main): Deinitializing Rml
debug(rml): deinitializing Rml
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 0 2 env.Env @ [system] : #7f7fd43b6100
debug(refcount): Header/onDeinit 0 2 env.Env @ [system] : #7f7fd43b6100
debug(rml): VTable/onDeinit env.Env
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 0 1 symbol.Symbol @ [system] : #7f7fd43d6400
debug(refcount): Header/onDeinit 0 1 symbol.Symbol @ [system] : #7f7fd43d6400
debug(rml): VTable/onDeinit symbol.Symbol
debug(refcount): symbol.Symbol/onDeinit-auto
debug(refcount): decr weak 0 0 symbol.Symbol @ [system] : #7f7fd43d6400
debug(refcount): Header/onDestroy 0 0 symbol.Symbol @ [system] : #7f7fd43d6400
debug(rml): VTable/onDestroy symbol.Symbol
debug(rml): (ObjMemory symbol.Symbol)/onDestroy
debug(refcount): deinit Obj(root.Nil)
debug(refcount): decr 0 1 root.Nil @ [system] : #7f7fd43d6500
debug(refcount): Header/onDeinit 0 1 root.Nil @ [system] : #7f7fd43d6500
debug(rml): VTable/onDeinit root.Nil
debug(refcount): root.Nil/onDeinit-auto
debug(refcount): decr weak 0 0 root.Nil @ [system] : #7f7fd43d6500
debug(refcount): Header/onDestroy 0 0 root.Nil @ [system] : #7f7fd43d6500
debug(rml): VTable/onDestroy root.Nil
debug(rml): (ObjMemory root.Nil)/onDestroy
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 0 1 symbol.Symbol @ [system] : #7f7fd43d6700
debug(refcount): Header/onDeinit 0 1 symbol.Symbol @ [system] : #7f7fd43d6700
debug(rml): VTable/onDeinit symbol.Symbol
debug(refcount): symbol.Symbol/onDeinit-auto
debug(refcount): decr weak 0 0 symbol.Symbol @ [system] : #7f7fd43d6700
debug(refcount): Header/onDestroy 0 0 symbol.Symbol @ [system] : #7f7fd43d6700
debug(rml): VTable/onDestroy symbol.Symbol
debug(rml): (ObjMemory symbol.Symbol)/onDestroy
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 0 1 procedure.Procedure @ [system] : #7f7fd43d6800
debug(refcount): Header/onDeinit 0 1 procedure.Procedure @ [system] : #7f7fd43d6800
debug(rml): VTable/onDeinit procedure.Procedure
debug(refcount): decr weak 0 0 procedure.Procedure @ [system] : #7f7fd43d6800
debug(refcount): Header/onDestroy 0 0 procedure.Procedure @ [system] : #7f7fd43d6800
debug(rml): VTable/onDestroy procedure.Procedure
debug(rml): (ObjMemory procedure.Procedure)/onDestroy
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 0 1 symbol.Symbol @ [system] : #7f7fd43d6900
debug(refcount): Header/onDeinit 0 1 symbol.Symbol @ [system] : #7f7fd43d6900
debug(rml): VTable/onDeinit symbol.Symbol
debug(refcount): symbol.Symbol/onDeinit-auto
debug(refcount): decr weak 0 0 symbol.Symbol @ [system] : #7f7fd43d6900
debug(refcount): Header/onDestroy 0 0 symbol.Symbol @ [system] : #7f7fd43d6900
debug(rml): VTable/onDestroy symbol.Symbol
debug(rml): (ObjMemory symbol.Symbol)/onDestroy
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 0 1 procedure.Procedure @ [system] : #7f7fd43d6a00
debug(refcount): Header/onDeinit 0 1 procedure.Procedure @ [system] : #7f7fd43d6a00
debug(rml): VTable/onDeinit procedure.Procedure
debug(refcount): decr weak 0 0 procedure.Procedure @ [system] : #7f7fd43d6a00
debug(refcount): Header/onDestroy 0 0 procedure.Procedure @ [system] : #7f7fd43d6a00
debug(rml): VTable/onDestroy procedure.Procedure
debug(rml): (ObjMemory procedure.Procedure)/onDestroy
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 0 1 symbol.Symbol @ [system] : #7f7fd43d6b00
debug(refcount): Header/onDeinit 0 1 symbol.Symbol @ [system] : #7f7fd43d6b00
debug(rml): VTable/onDeinit symbol.Symbol
debug(refcount): symbol.Symbol/onDeinit-auto
debug(refcount): decr weak 0 0 symbol.Symbol @ [system] : #7f7fd43d6b00
debug(refcount): Header/onDestroy 0 0 symbol.Symbol @ [system] : #7f7fd43d6b00
debug(rml): VTable/onDestroy symbol.Symbol
debug(rml): (ObjMemory symbol.Symbol)/onDestroy
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 0 1 procedure.Procedure @ [system] : #7f7fd43d6c00
debug(refcount): Header/onDeinit 0 1 procedure.Procedure @ [system] : #7f7fd43d6c00
debug(rml): VTable/onDeinit procedure.Procedure
debug(refcount): decr weak 0 0 procedure.Procedure @ [system] : #7f7fd43d6c00
debug(refcount): Header/onDestroy 0 0 procedure.Procedure @ [system] : #7f7fd43d6c00
debug(rml): VTable/onDestroy procedure.Procedure
debug(rml): (ObjMemory procedure.Procedure)/onDestroy
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 0 1 symbol.Symbol @ [system] : #7f7fd43d6d00
debug(refcount): Header/onDeinit 0 1 symbol.Symbol @ [system] : #7f7fd43d6d00
debug(rml): VTable/onDeinit symbol.Symbol
debug(refcount): symbol.Symbol/onDeinit-auto
debug(refcount): decr weak 0 0 symbol.Symbol @ [system] : #7f7fd43d6d00
debug(refcount): Header/onDestroy 0 0 symbol.Symbol @ [system] : #7f7fd43d6d00
debug(rml): VTable/onDestroy symbol.Symbol
debug(rml): (ObjMemory symbol.Symbol)/onDestroy
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 0 1 procedure.Procedure @ [system] : #7f7fd43d6e00
debug(refcount): Header/onDeinit 0 1 procedure.Procedure @ [system] : #7f7fd43d6e00
debug(rml): VTable/onDeinit procedure.Procedure
debug(refcount): decr weak 0 0 procedure.Procedure @ [system] : #7f7fd43d6e00
debug(refcount): Header/onDestroy 0 0 procedure.Procedure @ [system] : #7f7fd43d6e00
debug(rml): VTable/onDestroy procedure.Procedure
debug(rml): (ObjMemory procedure.Procedure)/onDestroy
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 0 1 symbol.Symbol @ [system] : #7f7fd43d6f00
debug(refcount): Header/onDeinit 0 1 symbol.Symbol @ [system] : #7f7fd43d6f00
debug(rml): VTable/onDeinit symbol.Symbol
debug(refcount): symbol.Symbol/onDeinit-auto
debug(refcount): decr weak 0 0 symbol.Symbol @ [system] : #7f7fd43d6f00
debug(refcount): Header/onDestroy 0 0 symbol.Symbol @ [system] : #7f7fd43d6f00
debug(rml): VTable/onDestroy symbol.Symbol
debug(rml): (ObjMemory symbol.Symbol)/onDestroy
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 0 1 procedure.Procedure @ [system] : #7f7fd43d8000
debug(refcount): Header/onDeinit 0 1 procedure.Procedure @ [system] : #7f7fd43d8000
debug(rml): VTable/onDeinit procedure.Procedure
debug(refcount): decr weak 0 0 procedure.Procedure @ [system] : #7f7fd43d8000
debug(refcount): Header/onDestroy 0 0 procedure.Procedure @ [system] : #7f7fd43d8000
debug(rml): VTable/onDestroy procedure.Procedure
debug(rml): (ObjMemory procedure.Procedure)/onDestroy
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 0 1 symbol.Symbol @ [system] : #7f7fd43d8100
debug(refcount): Header/onDeinit 0 1 symbol.Symbol @ [system] : #7f7fd43d8100
debug(rml): VTable/onDeinit symbol.Symbol
debug(refcount): symbol.Symbol/onDeinit-auto
debug(refcount): decr weak 0 0 symbol.Symbol @ [system] : #7f7fd43d8100
debug(refcount): Header/onDestroy 0 0 symbol.Symbol @ [system] : #7f7fd43d8100
debug(rml): VTable/onDestroy symbol.Symbol
debug(rml): (ObjMemory symbol.Symbol)/onDestroy
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 0 1 procedure.Procedure @ [system] : #7f7fd43d8200
debug(refcount): Header/onDeinit 0 1 procedure.Procedure @ [system] : #7f7fd43d8200
debug(rml): VTable/onDeinit procedure.Procedure
debug(refcount): decr weak 0 0 procedure.Procedure @ [system] : #7f7fd43d8200
debug(refcount): Header/onDestroy 0 0 procedure.Procedure @ [system] : #7f7fd43d8200
debug(rml): VTable/onDestroy procedure.Procedure
debug(rml): (ObjMemory procedure.Procedure)/onDestroy
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 0 1 symbol.Symbol @ [system] : #7f7fd43d8300
debug(refcount): Header/onDeinit 0 1 symbol.Symbol @ [system] : #7f7fd43d8300
debug(rml): VTable/onDeinit symbol.Symbol
debug(refcount): symbol.Symbol/onDeinit-auto
debug(refcount): decr weak 0 0 symbol.Symbol @ [system] : #7f7fd43d8300
debug(refcount): Header/onDestroy 0 0 symbol.Symbol @ [system] : #7f7fd43d8300
debug(rml): VTable/onDestroy symbol.Symbol
debug(rml): (ObjMemory symbol.Symbol)/onDestroy
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 0 1 procedure.Procedure @ [system] : #7f7fd43d8400
debug(refcount): Header/onDeinit 0 1 procedure.Procedure @ [system] : #7f7fd43d8400
debug(rml): VTable/onDeinit procedure.Procedure
debug(refcount): decr weak 0 0 procedure.Procedure @ [system] : #7f7fd43d8400
debug(refcount): Header/onDestroy 0 0 procedure.Procedure @ [system] : #7f7fd43d8400
debug(rml): VTable/onDestroy procedure.Procedure
debug(rml): (ObjMemory procedure.Procedure)/onDestroy
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 0 1 symbol.Symbol @ [system] : #7f7fd43d8500
debug(refcount): Header/onDeinit 0 1 symbol.Symbol @ [system] : #7f7fd43d8500
debug(rml): VTable/onDeinit symbol.Symbol
debug(refcount): symbol.Symbol/onDeinit-auto
debug(refcount): decr weak 0 0 symbol.Symbol @ [system] : #7f7fd43d8500
debug(refcount): Header/onDestroy 0 0 symbol.Symbol @ [system] : #7f7fd43d8500
debug(rml): VTable/onDestroy symbol.Symbol
debug(rml): (ObjMemory symbol.Symbol)/onDestroy
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 0 1 procedure.Procedure @ [system] : #7f7fd43d8600
debug(refcount): Header/onDeinit 0 1 procedure.Procedure @ [system] : #7f7fd43d8600
debug(rml): VTable/onDeinit procedure.Procedure
debug(refcount): decr weak 0 0 procedure.Procedure @ [system] : #7f7fd43d8600
debug(refcount): Header/onDestroy 0 0 procedure.Procedure @ [system] : #7f7fd43d8600
debug(rml): VTable/onDestroy procedure.Procedure
debug(rml): (ObjMemory procedure.Procedure)/onDestroy
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 0 1 symbol.Symbol @ [system] : #7f7fd43d8700
debug(refcount): Header/onDeinit 0 1 symbol.Symbol @ [system] : #7f7fd43d8700
debug(rml): VTable/onDeinit symbol.Symbol
debug(refcount): symbol.Symbol/onDeinit-auto
debug(refcount): decr weak 0 0 symbol.Symbol @ [system] : #7f7fd43d8700
debug(refcount): Header/onDestroy 0 0 symbol.Symbol @ [system] : #7f7fd43d8700
debug(rml): VTable/onDestroy symbol.Symbol
debug(rml): (ObjMemory symbol.Symbol)/onDestroy
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 0 1 procedure.Procedure @ [system] : #7f7fd43d8800
debug(refcount): Header/onDeinit 0 1 procedure.Procedure @ [system] : #7f7fd43d8800
debug(rml): VTable/onDeinit procedure.Procedure
debug(refcount): decr weak 0 0 procedure.Procedure @ [system] : #7f7fd43d8800
debug(refcount): Header/onDestroy 0 0 procedure.Procedure @ [system] : #7f7fd43d8800
debug(rml): VTable/onDestroy procedure.Procedure
debug(rml): (ObjMemory procedure.Procedure)/onDestroy
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 0 1 symbol.Symbol @ [system] : #7f7fd43d8900
debug(refcount): Header/onDeinit 0 1 symbol.Symbol @ [system] : #7f7fd43d8900
debug(rml): VTable/onDeinit symbol.Symbol
debug(refcount): symbol.Symbol/onDeinit-auto
debug(refcount): decr weak 0 0 symbol.Symbol @ [system] : #7f7fd43d8900
debug(refcount): Header/onDestroy 0 0 symbol.Symbol @ [system] : #7f7fd43d8900
debug(rml): VTable/onDestroy symbol.Symbol
debug(rml): (ObjMemory symbol.Symbol)/onDestroy
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 0 1 procedure.Procedure @ [system] : #7f7fd43d8a00
debug(refcount): Header/onDeinit 0 1 procedure.Procedure @ [system] : #7f7fd43d8a00
debug(rml): VTable/onDeinit procedure.Procedure
debug(refcount): decr weak 0 0 procedure.Procedure @ [system] : #7f7fd43d8a00
debug(refcount): Header/onDestroy 0 0 procedure.Procedure @ [system] : #7f7fd43d8a00
debug(rml): VTable/onDestroy procedure.Procedure
debug(rml): (ObjMemory procedure.Procedure)/onDestroy
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 0 1 symbol.Symbol @ [system] : #7f7fd43d8b00
debug(refcount): Header/onDeinit 0 1 symbol.Symbol @ [system] : #7f7fd43d8b00
debug(rml): VTable/onDeinit symbol.Symbol
debug(refcount): symbol.Symbol/onDeinit-auto
debug(refcount): decr weak 0 0 symbol.Symbol @ [system] : #7f7fd43d8b00
debug(refcount): Header/onDestroy 0 0 symbol.Symbol @ [system] : #7f7fd43d8b00
debug(rml): VTable/onDestroy symbol.Symbol
debug(rml): (ObjMemory symbol.Symbol)/onDestroy
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 0 1 procedure.Procedure @ [system] : #7f7fd43d8c00
debug(refcount): Header/onDeinit 0 1 procedure.Procedure @ [system] : #7f7fd43d8c00
debug(rml): VTable/onDeinit procedure.Procedure
debug(refcount): decr weak 0 0 procedure.Procedure @ [system] : #7f7fd43d8c00
debug(refcount): Header/onDestroy 0 0 procedure.Procedure @ [system] : #7f7fd43d8c00
debug(rml): VTable/onDestroy procedure.Procedure
debug(rml): (ObjMemory procedure.Procedure)/onDestroy
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 0 1 symbol.Symbol @ [system] : #7f7fd43d8d00
debug(refcount): Header/onDeinit 0 1 symbol.Symbol @ [system] : #7f7fd43d8d00
debug(rml): VTable/onDeinit symbol.Symbol
debug(refcount): symbol.Symbol/onDeinit-auto
debug(refcount): decr weak 0 0 symbol.Symbol @ [system] : #7f7fd43d8d00
debug(refcount): Header/onDestroy 0 0 symbol.Symbol @ [system] : #7f7fd43d8d00
debug(rml): VTable/onDestroy symbol.Symbol
debug(rml): (ObjMemory symbol.Symbol)/onDestroy
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 0 1 procedure.Procedure @ [system] : #7f7fd43d8e00
debug(refcount): Header/onDeinit 0 1 procedure.Procedure @ [system] : #7f7fd43d8e00
debug(rml): VTable/onDeinit procedure.Procedure
debug(refcount): decr weak 0 0 procedure.Procedure @ [system] : #7f7fd43d8e00
debug(refcount): Header/onDestroy 0 0 procedure.Procedure @ [system] : #7f7fd43d8e00
debug(rml): VTable/onDestroy procedure.Procedure
debug(rml): (ObjMemory procedure.Procedure)/onDestroy
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 0 1 symbol.Symbol @ [system] : #7f7fd43d8f00
debug(refcount): Header/onDeinit 0 1 symbol.Symbol @ [system] : #7f7fd43d8f00
debug(rml): VTable/onDeinit symbol.Symbol
debug(refcount): symbol.Symbol/onDeinit-auto
debug(refcount): decr weak 0 0 symbol.Symbol @ [system] : #7f7fd43d8f00
debug(refcount): Header/onDestroy 0 0 symbol.Symbol @ [system] : #7f7fd43d8f00
debug(rml): VTable/onDestroy symbol.Symbol
debug(rml): (ObjMemory symbol.Symbol)/onDestroy
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 0 1 procedure.Procedure @ [system] : #7f7fd43da000
debug(refcount): Header/onDeinit 0 1 procedure.Procedure @ [system] : #7f7fd43da000
debug(rml): VTable/onDeinit procedure.Procedure
debug(refcount): decr weak 0 0 procedure.Procedure @ [system] : #7f7fd43da000
debug(refcount): Header/onDestroy 0 0 procedure.Procedure @ [system] : #7f7fd43da000
debug(rml): VTable/onDestroy procedure.Procedure
debug(rml): (ObjMemory procedure.Procedure)/onDestroy
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 0 1 symbol.Symbol @ [system] : #7f7fd43da100
debug(refcount): Header/onDeinit 0 1 symbol.Symbol @ [system] : #7f7fd43da100
debug(rml): VTable/onDeinit symbol.Symbol
debug(refcount): symbol.Symbol/onDeinit-auto
debug(refcount): decr weak 0 0 symbol.Symbol @ [system] : #7f7fd43da100
debug(refcount): Header/onDestroy 0 0 symbol.Symbol @ [system] : #7f7fd43da100
debug(rml): VTable/onDestroy symbol.Symbol
debug(rml): (ObjMemory symbol.Symbol)/onDestroy
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 0 1 procedure.Procedure @ [system] : #7f7fd43da200
debug(refcount): Header/onDeinit 0 1 procedure.Procedure @ [system] : #7f7fd43da200
debug(rml): VTable/onDeinit procedure.Procedure
debug(refcount): decr weak 0 0 procedure.Procedure @ [system] : #7f7fd43da200
debug(refcount): Header/onDestroy 0 0 procedure.Procedure @ [system] : #7f7fd43da200
debug(rml): VTable/onDestroy procedure.Procedure
debug(rml): (ObjMemory procedure.Procedure)/onDestroy
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 0 1 symbol.Symbol @ [system] : #7f7fd43da300
debug(refcount): Header/onDeinit 0 1 symbol.Symbol @ [system] : #7f7fd43da300
debug(rml): VTable/onDeinit symbol.Symbol
debug(refcount): symbol.Symbol/onDeinit-auto
debug(refcount): decr weak 0 0 symbol.Symbol @ [system] : #7f7fd43da300
debug(refcount): Header/onDestroy 0 0 symbol.Symbol @ [system] : #7f7fd43da300
debug(rml): VTable/onDestroy symbol.Symbol
debug(rml): (ObjMemory symbol.Symbol)/onDestroy
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 0 1 procedure.Procedure @ [system] : #7f7fd43da400
debug(refcount): Header/onDeinit 0 1 procedure.Procedure @ [system] : #7f7fd43da400
debug(rml): VTable/onDeinit procedure.Procedure
debug(refcount): decr weak 0 0 procedure.Procedure @ [system] : #7f7fd43da400
debug(refcount): Header/onDestroy 0 0 procedure.Procedure @ [system] : #7f7fd43da400
debug(rml): VTable/onDestroy procedure.Procedure
debug(rml): (ObjMemory procedure.Procedure)/onDestroy
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 0 1 symbol.Symbol @ [system] : #7f7fd43da500
debug(refcount): Header/onDeinit 0 1 symbol.Symbol @ [system] : #7f7fd43da500
debug(rml): VTable/onDeinit symbol.Symbol
debug(refcount): symbol.Symbol/onDeinit-auto
debug(refcount): decr weak 0 0 symbol.Symbol @ [system] : #7f7fd43da500
debug(refcount): Header/onDestroy 0 0 symbol.Symbol @ [system] : #7f7fd43da500
debug(rml): VTable/onDestroy symbol.Symbol
debug(rml): (ObjMemory symbol.Symbol)/onDestroy
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 0 1 procedure.Procedure @ [system] : #7f7fd43da600
debug(refcount): Header/onDeinit 0 1 procedure.Procedure @ [system] : #7f7fd43da600
debug(rml): VTable/onDeinit procedure.Procedure
debug(refcount): decr weak 0 0 procedure.Procedure @ [system] : #7f7fd43da600
debug(refcount): Header/onDestroy 0 0 procedure.Procedure @ [system] : #7f7fd43da600
debug(rml): VTable/onDestroy procedure.Procedure
debug(rml): (ObjMemory procedure.Procedure)/onDestroy
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 0 1 symbol.Symbol @ [system] : #7f7fd43da700
debug(refcount): Header/onDeinit 0 1 symbol.Symbol @ [system] : #7f7fd43da700
debug(rml): VTable/onDeinit symbol.Symbol
debug(refcount): symbol.Symbol/onDeinit-auto
debug(refcount): decr weak 0 0 symbol.Symbol @ [system] : #7f7fd43da700
debug(refcount): Header/onDestroy 0 0 symbol.Symbol @ [system] : #7f7fd43da700
debug(rml): VTable/onDestroy symbol.Symbol
debug(rml): (ObjMemory symbol.Symbol)/onDestroy
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 0 1 procedure.Procedure @ [system] : #7f7fd43da800
debug(refcount): Header/onDeinit 0 1 procedure.Procedure @ [system] : #7f7fd43da800
debug(rml): VTable/onDeinit procedure.Procedure
debug(refcount): decr weak 0 0 procedure.Procedure @ [system] : #7f7fd43da800
debug(refcount): Header/onDestroy 0 0 procedure.Procedure @ [system] : #7f7fd43da800
debug(rml): VTable/onDestroy procedure.Procedure
debug(rml): (ObjMemory procedure.Procedure)/onDestroy
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 0 1 symbol.Symbol @ [system] : #7f7fd43da900
debug(refcount): Header/onDeinit 0 1 symbol.Symbol @ [system] : #7f7fd43da900
debug(rml): VTable/onDeinit symbol.Symbol
debug(refcount): symbol.Symbol/onDeinit-auto
debug(refcount): decr weak 0 0 symbol.Symbol @ [system] : #7f7fd43da900
debug(refcount): Header/onDestroy 0 0 symbol.Symbol @ [system] : #7f7fd43da900
debug(rml): VTable/onDestroy symbol.Symbol
debug(rml): (ObjMemory symbol.Symbol)/onDestroy
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 0 1 procedure.Procedure @ [system] : #7f7fd43daa00
debug(refcount): Header/onDeinit 0 1 procedure.Procedure @ [system] : #7f7fd43daa00
debug(rml): VTable/onDeinit procedure.Procedure
debug(refcount): decr weak 0 0 procedure.Procedure @ [system] : #7f7fd43daa00
debug(refcount): Header/onDestroy 0 0 procedure.Procedure @ [system] : #7f7fd43daa00
debug(rml): VTable/onDestroy procedure.Procedure
debug(rml): (ObjMemory procedure.Procedure)/onDestroy
debug(refcount): deinit Obj(symbol.Symbol)
debug(refcount): decr 0 1 symbol.Symbol @ [system] : #7f7fd43dab00
debug(refcount): Header/onDeinit 0 1 symbol.Symbol @ [system] : #7f7fd43dab00
debug(rml): VTable/onDeinit symbol.Symbol
debug(refcount): symbol.Symbol/onDeinit-auto
debug(refcount): decr weak 0 0 symbol.Symbol @ [system] : #7f7fd43dab00
debug(refcount): Header/onDestroy 0 0 symbol.Symbol @ [system] : #7f7fd43dab00
debug(rml): VTable/onDestroy symbol.Symbol
debug(rml): (ObjMemory symbol.Symbol)/onDestroy
debug(refcount): deinit Obj(procedure.Procedure)
debug(refcount): decr 0 1 procedure.Procedure @ [system] : #7f7fd43dac00
debug(refcount): Header/onDeinit 0 1 procedure.Procedure @ [system] : #7f7fd43dac00
debug(rml): VTable/onDeinit procedure.Procedure
debug(refcount): decr weak 0 0 procedure.Procedure @ [system] : #7f7fd43dac00
debug(refcount): Header/onDestroy 0 0 procedure.Procedure @ [system] : #7f7fd43dac00
debug(rml): VTable/onDestroy procedure.Procedure
debug(rml): (ObjMemory procedure.Procedure)/onDestroy
debug(refcount): decr weak 0 1 env.Env @ [system] : #7f7fd43b6100
debug(refcount): deinit Obj(interpreter.Interpreter)
debug(refcount): decr 0 1 interpreter.Interpreter @ [system] : #7f7fd43dae00
debug(refcount): Header/onDeinit 0 1 interpreter.Interpreter @ [system] : #7f7fd43dae00
debug(rml): VTable/onDeinit interpreter.Interpreter
debug(evaluation): deinitializing Obj(Interpreter)7f7fd43dae90
debug(refcount): deinit Obj(env.Env)
debug(refcount): decr 0 1 env.Env @ [system] : #7f7fd43daf00
debug(refcount): Header/onDeinit 0 1 env.Env @ [system] : #7f7fd43daf00
debug(rml): VTable/onDeinit env.Env
debug(refcount): Wk(env.Env)/deinit
debug(refcount): decr weak 0 0 env.Env @ [system] : #7f7fd43b6100
debug(refcount): Header/onDestroy 0 0 env.Env @ [system] : #7f7fd43b6100
debug(rml): VTable/onDestroy env.Env
debug(rml): (ObjMemory env.Env)/onDestroy
debug(refcount): decr weak 0 0 env.Env @ [system] : #7f7fd43daf00
debug(refcount): Header/onDestroy 0 0 env.Env @ [system] : #7f7fd43daf00
debug(rml): VTable/onDestroy env.Env
debug(rml): (ObjMemory env.Env)/onDestroy
debug(refcount): decr weak 0 0 interpreter.Interpreter @ [system] : #7f7fd43dae00
debug(refcount): Header/onDestroy 0 0 interpreter.Interpreter @ [system] : #7f7fd43dae00
debug(rml): VTable/onDestroy interpreter.Interpreter
debug(rml): (ObjMemory interpreter.Interpreter)/onDestroy
error(rml): memory management problem detected, object_count: 165
error(main): on Rml.deinit, MemoryLeak
debug(main): Deinitializing gpa

error(gpa): memory address 0x7f7fd43bc100 leaked: 
/home/nox/.zvm/master/lib/std/array_hash_map.zig:2104:49: 0x109ea54 in alloc (rml)
        const bytes = try allocator.alignedAlloc(u8, @alignOf(IndexHeader), nbytes);
                                                ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:886:53: 0x111555c in ensureTotalCapacityContext (rml)
            const new_header = try IndexHeader.alloc(allocator, new_bit_index);
                                                    ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:767:44: 0x1115820 in getOrPutContextAdapted__anon_22930 (rml)
            self.ensureTotalCapacityContext(allocator, self.entries.len + 1, ctx) catch |err| {
                                           ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:755:56: 0x1116477 in getOrPutContext (rml)
            const gop = try self.getOrPutContextAdapted(allocator, key, ctx, ctx);
                                                       ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:931:52: 0x1116580 in putContext (rml)
            const result = try self.getOrPutContext(allocator, key, ctx);
                                                   ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:928:35: 0x11165dc in put (rml)
            return self.putContext(allocator, key, value, undefined);
                                  ^

error(gpa): memory address 0x7f7fd43bc200 leaked: 
/home/nox/.zvm/master/lib/std/array_hash_map.zig:2104:49: 0x109ea54 in alloc (rml)
        const bytes = try allocator.alignedAlloc(u8, @alignOf(IndexHeader), nbytes);
                                                ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:886:53: 0x111555c in ensureTotalCapacityContext (rml)
            const new_header = try IndexHeader.alloc(allocator, new_bit_index);
                                                    ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:767:44: 0x1115820 in getOrPutContextAdapted__anon_22930 (rml)
            self.ensureTotalCapacityContext(allocator, self.entries.len + 1, ctx) catch |err| {
                                           ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:755:56: 0x1116477 in getOrPutContext (rml)
            const gop = try self.getOrPutContextAdapted(allocator, key, ctx, ctx);
                                                       ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:931:52: 0x1116580 in putContext (rml)
            const result = try self.getOrPutContext(allocator, key, ctx);
                                                   ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:928:35: 0x11165dc in put (rml)
            return self.putContext(allocator, key, value, undefined);
                                  ^

error(gpa): memory address 0x7f7fd43b6200 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:335:61: 0x108b5b5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:150:43: 0x1085ae1 in init (rml)
    self.namespace_env = try Obj(Env).init(self, self.storage.origin);
                                          ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^
/home/nox/.zvm/master/lib/std/start.zig:248:5: 0x108463f in _start (rml)
    asm volatile (switch (native_arch) {
    ^

error(gpa): memory address 0x7f7fd43b6300 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:335:61: 0x108b5b5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:50:47: 0x108b722 in bindObjectNamespaces__anon_6055 (rml)
        const builtinEnv: Obj(Env) = try .init(rml, rml.storage.origin);
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^
/home/nox/.zvm/master/lib/std/start.zig:248:5: 0x108463f in _start (rml)
    asm volatile (switch (native_arch) {
    ^

error(gpa): memory address 0x7f7fd43b6400 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e24ba in wrapNativeFunction__anon_17703 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b174e in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108b801 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43b6500 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b184e in bindNamespace__anon_9836 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108b885 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43b6600 leaked: 
/home/nox/.zvm/master/lib/std/multi_array_list.zig:434:51: 0x1114704 in setCapacity (rml)
            const new_bytes = try gpa.alignedAlloc(
                                                  ^
/home/nox/.zvm/master/lib/std/multi_array_list.zig:420:36: 0x11151a8 in ensureTotalCapacity (rml)
            return self.setCapacity(gpa, better_capacity);
                                   ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:873:53: 0x111532a in ensureTotalCapacityContext (rml)
                try self.entries.ensureTotalCapacity(allocator, new_capacity);
                                                    ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:767:44: 0x1115820 in getOrPutContextAdapted__anon_22930 (rml)
            self.ensureTotalCapacityContext(allocator, self.entries.len + 1, ctx) catch |err| {
                                           ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:755:56: 0x1116477 in getOrPutContext (rml)
            const gop = try self.getOrPutContextAdapted(allocator, key, ctx, ctx);
                                                       ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:931:52: 0x1116580 in putContext (rml)
            const result = try self.getOrPutContext(allocator, key, ctx);
                                                   ^

error(gpa): memory address 0x7f7fd43b6700 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:62:47: 0x108b92f in bindObjectNamespaces__anon_6055 (rml)
        try env.data.bind(try Obj(Symbol).init(rml, rml.storage.origin, .{field.name}), builtinEnv.typeErase());
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^
/home/nox/.zvm/master/lib/std/start.zig:248:5: 0x108463f in _start (rml)
    asm volatile (switch (native_arch) {
    ^

error(gpa): memory address 0x7f7fd43b6900 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:335:61: 0x108b5b5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:50:47: 0x108b752 in bindObjectNamespaces__anon_6055 (rml)
        const builtinEnv: Obj(Env) = try .init(rml, rml.storage.origin);
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^
/home/nox/.zvm/master/lib/std/start.zig:248:5: 0x108463f in _start (rml)
    asm volatile (switch (native_arch) {
    ^

error(gpa): memory address 0x7f7fd43b6a00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e2cba in wrapNativeFunction__anon_17835 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b1d51 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108bb42 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43b6b00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e2d3a in wrapNativeFunction__anon_17840 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b1da9 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108bb42 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43b6c00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e2dba in wrapNativeFunction__anon_17842 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b1e5d in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108bb42 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43b6d00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e2e3a in wrapNativeFunction__anon_17847 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b1f08 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108bb42 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43b6e00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b209a in bindNamespace__anon_10211 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108bbf0 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43b6f00 leaked: 
/home/nox/.zvm/master/lib/std/multi_array_list.zig:434:51: 0x1114704 in setCapacity (rml)
            const new_bytes = try gpa.alignedAlloc(
                                                  ^
/home/nox/.zvm/master/lib/std/multi_array_list.zig:420:36: 0x11151a8 in ensureTotalCapacity (rml)
            return self.setCapacity(gpa, better_capacity);
                                   ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:873:53: 0x111532a in ensureTotalCapacityContext (rml)
                try self.entries.ensureTotalCapacity(allocator, new_capacity);
                                                    ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:767:44: 0x1115820 in getOrPutContextAdapted__anon_22930 (rml)
            self.ensureTotalCapacityContext(allocator, self.entries.len + 1, ctx) catch |err| {
                                           ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:755:56: 0x1116477 in getOrPutContext (rml)
            const gop = try self.getOrPutContextAdapted(allocator, key, ctx, ctx);
                                                       ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:931:52: 0x1116580 in putContext (rml)
            const result = try self.getOrPutContext(allocator, key, ctx);
                                                   ^

error(gpa): memory address 0x7f7fd43b8000 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b20d1 in bindNamespace__anon_10211 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108bbf0 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43b8100 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b2253 in bindNamespace__anon_10211 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108bbf0 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43b8200 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b23d6 in bindNamespace__anon_10211 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108bbf0 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43b8300 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:62:47: 0x108bc9a in bindObjectNamespaces__anon_6055 (rml)
        try env.data.bind(try Obj(Symbol).init(rml, rml.storage.origin, .{field.name}), builtinEnv.typeErase());
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^
/home/nox/.zvm/master/lib/std/start.zig:248:5: 0x108463f in _start (rml)
    asm volatile (switch (native_arch) {
    ^

error(gpa): memory address 0x7f7fd43b8400 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:335:61: 0x108b5b5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:50:47: 0x108ba93 in bindObjectNamespaces__anon_6055 (rml)
        const builtinEnv: Obj(Env) = try .init(rml, rml.storage.origin);
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^
/home/nox/.zvm/master/lib/std/start.zig:248:5: 0x108463f in _start (rml)
    asm volatile (switch (native_arch) {
    ^

error(gpa): memory address 0x7f7fd43b8500 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e36ca in wrapNativeFunction__anon_17981 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b2882 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108bead in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43b8600 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e374a in wrapNativeFunction__anon_17986 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b28da in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108bead in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43b8700 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e37ca in wrapNativeFunction__anon_17991 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b298e in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108bead in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43b8800 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e384a in wrapNativeFunction__anon_17996 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b2a42 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108bead in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43b8900 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e38ca in wrapNativeFunction__anon_18001 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b2af6 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108bead in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43b8a00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e394a in wrapNativeFunction__anon_18006 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b2baa in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108bead in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43b8b00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e39ca in wrapNativeFunction__anon_18011 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b2c5e in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108bead in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43b8c00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e3a4a in wrapNativeFunction__anon_18013 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b2d12 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108bead in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43b8d00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e3aca in wrapNativeFunction__anon_18018 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b2dc6 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108bead in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43b8e00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e3b4a in wrapNativeFunction__anon_18023 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b2e7a in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108bead in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43b8f00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e3bca in wrapNativeFunction__anon_18028 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b2f2e in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108bead in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43ba000 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e3c4a in wrapNativeFunction__anon_18033 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b2fe2 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108bead in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43ba100 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e3cca in wrapNativeFunction__anon_18038 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b3096 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108bead in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43ba200 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b321a in bindNamespace__anon_10733 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108bf3b in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43ba400 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b3251 in bindNamespace__anon_10733 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108bf3b in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43ba500 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b33b9 in bindNamespace__anon_10733 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108bf3b in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43ba600 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b3525 in bindNamespace__anon_10733 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108bf3b in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43ba700 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b3691 in bindNamespace__anon_10733 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108bf3b in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43ba800 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b37fd in bindNamespace__anon_10733 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108bf3b in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43ba900 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b3969 in bindNamespace__anon_10733 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108bf3b in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43baa00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b3ad5 in bindNamespace__anon_10733 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108bf3b in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43bab00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b3c41 in bindNamespace__anon_10733 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108bf3b in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43bac00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b3dad in bindNamespace__anon_10733 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108bf3b in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43bad00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b3f19 in bindNamespace__anon_10733 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108bf3b in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43bae00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b4085 in bindNamespace__anon_10733 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108bf3b in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43baf00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b41f1 in bindNamespace__anon_10733 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108bf3b in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43be000 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:62:47: 0x108bfe5 in bindObjectNamespaces__anon_6055 (rml)
        try env.data.bind(try Obj(Symbol).init(rml, rml.storage.origin, .{field.name}), builtinEnv.typeErase());
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^
/home/nox/.zvm/master/lib/std/start.zig:248:5: 0x108463f in _start (rml)
    asm volatile (switch (native_arch) {
    ^

error(gpa): memory address 0x7f7fd43be200 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:335:61: 0x108b5b5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:50:47: 0x108bdfe in bindObjectNamespaces__anon_6055 (rml)
        const builtinEnv: Obj(Env) = try .init(rml, rml.storage.origin);
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^
/home/nox/.zvm/master/lib/std/start.zig:248:5: 0x108463f in _start (rml)
    asm volatile (switch (native_arch) {
    ^

error(gpa): memory address 0x7f7fd43be300 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e465a in wrapNativeFunction__anon_18164 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b4879 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c1f8 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43be400 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e46da in wrapNativeFunction__anon_18169 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b48d1 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c1f8 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43be500 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e475a in wrapNativeFunction__anon_18174 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b4985 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c1f8 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43be600 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e47da in wrapNativeFunction__anon_18179 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b4a39 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c1f8 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43be700 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e485a in wrapNativeFunction__anon_18184 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b4aed in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c1f8 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43be800 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e48da in wrapNativeFunction__anon_18189 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b4ba1 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c1f8 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43be900 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e495a in wrapNativeFunction__anon_18194 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b4c55 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c1f8 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43bea00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e49da in wrapNativeFunction__anon_18199 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b4d09 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c1f8 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43beb00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b4e8a in bindNamespace__anon_11166 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c286 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43bec00 leaked: 
/home/nox/.zvm/master/lib/std/multi_array_list.zig:434:51: 0x1114704 in setCapacity (rml)
            const new_bytes = try gpa.alignedAlloc(
                                                  ^
/home/nox/.zvm/master/lib/std/multi_array_list.zig:420:36: 0x11151a8 in ensureTotalCapacity (rml)
            return self.setCapacity(gpa, better_capacity);
                                   ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:873:53: 0x111532a in ensureTotalCapacityContext (rml)
                try self.entries.ensureTotalCapacity(allocator, new_capacity);
                                                    ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:767:44: 0x1115820 in getOrPutContextAdapted__anon_22930 (rml)
            self.ensureTotalCapacityContext(allocator, self.entries.len + 1, ctx) catch |err| {
                                           ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:755:56: 0x1116477 in getOrPutContext (rml)
            const gop = try self.getOrPutContextAdapted(allocator, key, ctx, ctx);
                                                       ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:931:52: 0x1116580 in putContext (rml)
            const result = try self.getOrPutContext(allocator, key, ctx);
                                                   ^

error(gpa): memory address 0x7f7fd43bed00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b4ec1 in bindNamespace__anon_11166 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c286 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43bef00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b5029 in bindNamespace__anon_11166 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c286 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43c2000 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b5195 in bindNamespace__anon_11166 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c286 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43c2100 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b5301 in bindNamespace__anon_11166 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c286 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43c2200 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b546d in bindNamespace__anon_11166 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c286 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43c2300 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b55d9 in bindNamespace__anon_11166 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c286 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43c2400 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b5742 in bindNamespace__anon_11166 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c286 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43c2500 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:62:47: 0x108c330 in bindObjectNamespaces__anon_6055 (rml)
        try env.data.bind(try Obj(Symbol).init(rml, rml.storage.origin, .{field.name}), builtinEnv.typeErase());
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^
/home/nox/.zvm/master/lib/std/start.zig:248:5: 0x108463f in _start (rml)
    asm volatile (switch (native_arch) {
    ^

error(gpa): memory address 0x7f7fd43c2600 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:335:61: 0x108b5b5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:50:47: 0x108c149 in bindObjectNamespaces__anon_6055 (rml)
        const builtinEnv: Obj(Env) = try .init(rml, rml.storage.origin);
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^
/home/nox/.zvm/master/lib/std/start.zig:248:5: 0x108463f in _start (rml)
    asm volatile (switch (native_arch) {
    ^

error(gpa): memory address 0x7f7fd43c2700 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e4dda in wrapNativeFunction__anon_18278 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b5c79 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c543 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c2800 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e4e5a in wrapNativeFunction__anon_18280 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b5cd1 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c543 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c2900 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e4eda in wrapNativeFunction__anon_18282 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b5d85 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c543 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c2a00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e4f5a in wrapNativeFunction__anon_18284 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b5e39 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c543 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c2b00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e4fda in wrapNativeFunction__anon_18289 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b5eed in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c543 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c2c00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e505a in wrapNativeFunction__anon_18294 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b5fa1 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c543 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c2d00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10e50da in wrapNativeFunction__anon_18299 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b6055 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c543 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c2e00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b61da in bindNamespace__anon_11523 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c5d1 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43c2f00 leaked: 
/home/nox/.zvm/master/lib/std/multi_array_list.zig:434:51: 0x1114704 in setCapacity (rml)
            const new_bytes = try gpa.alignedAlloc(
                                                  ^
/home/nox/.zvm/master/lib/std/multi_array_list.zig:420:36: 0x11151a8 in ensureTotalCapacity (rml)
            return self.setCapacity(gpa, better_capacity);
                                   ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:873:53: 0x111532a in ensureTotalCapacityContext (rml)
                try self.entries.ensureTotalCapacity(allocator, new_capacity);
                                                    ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:767:44: 0x1115820 in getOrPutContextAdapted__anon_22930 (rml)
            self.ensureTotalCapacityContext(allocator, self.entries.len + 1, ctx) catch |err| {
                                           ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:755:56: 0x1116477 in getOrPutContext (rml)
            const gop = try self.getOrPutContextAdapted(allocator, key, ctx, ctx);
                                                       ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:931:52: 0x1116580 in putContext (rml)
            const result = try self.getOrPutContext(allocator, key, ctx);
                                                   ^

error(gpa): memory address 0x7f7fd43c4000 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b6211 in bindNamespace__anon_11523 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c5d1 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43c4100 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b6379 in bindNamespace__anon_11523 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c5d1 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43c4200 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b64e5 in bindNamespace__anon_11523 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c5d1 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43c4300 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b6651 in bindNamespace__anon_11523 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c5d1 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43c4400 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b67bd in bindNamespace__anon_11523 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c5d1 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43c4500 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b6926 in bindNamespace__anon_11523 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c5d1 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43c4600 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:62:47: 0x108c67b in bindObjectNamespaces__anon_6055 (rml)
        try env.data.bind(try Obj(Symbol).init(rml, rml.storage.origin, .{field.name}), builtinEnv.typeErase());
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^
/home/nox/.zvm/master/lib/std/start.zig:248:5: 0x108463f in _start (rml)
    asm volatile (switch (native_arch) {
    ^

error(gpa): memory address 0x7f7fd43c4700 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:335:61: 0x108b5b5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:50:47: 0x108c494 in bindObjectNamespaces__anon_6055 (rml)
        const builtinEnv: Obj(Env) = try .init(rml, rml.storage.origin);
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^
/home/nox/.zvm/master/lib/std/start.zig:248:5: 0x108463f in _start (rml)
    asm volatile (switch (native_arch) {
    ^

error(gpa): memory address 0x7f7fd43c4800 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ebf3a in wrapNativeFunction__anon_18893 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b6e78 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c4900 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ebfba in wrapNativeFunction__anon_18898 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b6ed9 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c4a00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ec03a in wrapNativeFunction__anon_18903 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b6f9a in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c4b00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ec0ba in wrapNativeFunction__anon_18908 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b705b in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c4c00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ec13a in wrapNativeFunction__anon_18913 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b711c in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c4d00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ec1ba in wrapNativeFunction__anon_18916 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b71dd in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c4e00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ec23a in wrapNativeFunction__anon_18921 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b729e in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c4f00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ec2ba in wrapNativeFunction__anon_18924 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b735f in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c6000 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ec33a in wrapNativeFunction__anon_18929 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b7420 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c6100 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ec3ba in wrapNativeFunction__anon_18934 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b74e1 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c6200 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ec43a in wrapNativeFunction__anon_18939 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b75a2 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c6300 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ec4ba in wrapNativeFunction__anon_18944 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b7663 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c6400 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ec53a in wrapNativeFunction__anon_18949 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b7724 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c6500 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ec5ba in wrapNativeFunction__anon_18954 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b77e5 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c6600 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ec63a in wrapNativeFunction__anon_18959 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b78a6 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c6700 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ec6ba in wrapNativeFunction__anon_18964 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b7967 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c6800 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ec73a in wrapNativeFunction__anon_18969 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b7a2a in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c6900 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ec7ba in wrapNativeFunction__anon_18974 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b7aea in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c6a00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ec83a in wrapNativeFunction__anon_18979 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b7baa in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c6b00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ec8ba in wrapNativeFunction__anon_18984 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b7c67 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c6c00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ec93a in wrapNativeFunction__anon_18989 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b7d24 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c6d00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ec9ba in wrapNativeFunction__anon_18994 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b7de1 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c6e00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10eca3a in wrapNativeFunction__anon_18999 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b7e9e in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c6f00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ecaba in wrapNativeFunction__anon_19001 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b7f5b in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c8000 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ecb3a in wrapNativeFunction__anon_19006 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b8018 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c8100 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ecbba in wrapNativeFunction__anon_19011 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b80d5 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c8200 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ecc3a in wrapNativeFunction__anon_19016 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b8192 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c8300 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10eccba in wrapNativeFunction__anon_19021 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b824f in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c8400 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ecd3a in wrapNativeFunction__anon_19026 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b830c in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c8500 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ecdba in wrapNativeFunction__anon_19031 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10b83c9 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108c88e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43c8600 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b8560 in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43c8800 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b8597 in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43c8900 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b86ff in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43c8a00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b886b in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43c8b00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b89d7 in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43c8c00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b8b43 in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43c8d00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b8caf in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43c8e00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b8e1b in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43c8f00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b8f87 in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43cc000 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b90f3 in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43cc100 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b925f in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43cc200 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b93cb in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43cc300 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b9537 in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43cc400 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b96a3 in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43cc500 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b980f in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43cc600 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b997b in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43cc700 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b9ae7 in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43cc800 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b9c53 in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43cc900 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b9dc2 in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43cca00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10b9f31 in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43ccb00 leaked: 
/home/nox/.zvm/master/lib/std/array_hash_map.zig:2104:49: 0x109ea54 in alloc (rml)
        const bytes = try allocator.alignedAlloc(u8, @alignOf(IndexHeader), nbytes);
                                                ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:886:53: 0x111555c in ensureTotalCapacityContext (rml)
            const new_header = try IndexHeader.alloc(allocator, new_bit_index);
                                                    ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:767:44: 0x1115820 in getOrPutContextAdapted__anon_22930 (rml)
            self.ensureTotalCapacityContext(allocator, self.entries.len + 1, ctx) catch |err| {
                                           ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:755:56: 0x1116477 in getOrPutContext (rml)
            const gop = try self.getOrPutContextAdapted(allocator, key, ctx, ctx);
                                                       ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:931:52: 0x1116580 in putContext (rml)
            const result = try self.getOrPutContext(allocator, key, ctx);
                                                   ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:928:35: 0x11165dc in put (rml)
            return self.putContext(allocator, key, value, undefined);
                                  ^

error(gpa): memory address 0x7f7fd43ccc00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10ba0a0 in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43ccd00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10ba20f in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43cce00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10ba37e in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43ccf00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10ba4ed in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43d0000 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10ba65c in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43d0100 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10ba7cb in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43d0200 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10ba93a in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43d0300 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10baaa9 in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43d0400 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10bac18 in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43d0500 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10bad87 in bindNamespace__anon_13072 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108c91c in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43d0600 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:62:47: 0x108c9c6 in bindObjectNamespaces__anon_6055 (rml)
        try env.data.bind(try Obj(Symbol).init(rml, rml.storage.origin, .{field.name}), builtinEnv.typeErase());
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^
/home/nox/.zvm/master/lib/std/start.zig:248:5: 0x108463f in _start (rml)
    asm volatile (switch (native_arch) {
    ^

error(gpa): memory address 0x7f7fd43d0700 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:335:61: 0x108b5b5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:50:47: 0x108c7df in bindObjectNamespaces__anon_6055 (rml)
        const builtinEnv: Obj(Env) = try .init(rml, rml.storage.origin);
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^
/home/nox/.zvm/master/lib/std/start.zig:248:5: 0x108463f in _start (rml)
    asm volatile (switch (native_arch) {
    ^

error(gpa): memory address 0x7f7fd43d0800 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:62:47: 0x108ccd9 in bindObjectNamespaces__anon_6055 (rml)
        try env.data.bind(try Obj(Symbol).init(rml, rml.storage.origin, .{field.name}), builtinEnv.typeErase());
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^
/home/nox/.zvm/master/lib/std/start.zig:248:5: 0x108463f in _start (rml)
    asm volatile (switch (native_arch) {
    ^

error(gpa): memory address 0x7f7fd43d0900 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:335:61: 0x108b5b5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:50:47: 0x108cb2a in bindObjectNamespaces__anon_6055 (rml)
        const builtinEnv: Obj(Env) = try .init(rml, rml.storage.origin);
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^
/home/nox/.zvm/master/lib/std/start.zig:248:5: 0x108463f in _start (rml)
    asm volatile (switch (native_arch) {
    ^

error(gpa): memory address 0x7f7fd43d0a00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:62:47: 0x108cfd7 in bindObjectNamespaces__anon_6055 (rml)
        try env.data.bind(try Obj(Symbol).init(rml, rml.storage.origin, .{field.name}), builtinEnv.typeErase());
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^
/home/nox/.zvm/master/lib/std/start.zig:248:5: 0x108463f in _start (rml)
    asm volatile (switch (native_arch) {
    ^

error(gpa): memory address 0x7f7fd43d0b00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:335:61: 0x108b5b5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:50:47: 0x108ce28 in bindObjectNamespaces__anon_6055 (rml)
        const builtinEnv: Obj(Env) = try .init(rml, rml.storage.origin);
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^
/home/nox/.zvm/master/lib/std/start.zig:248:5: 0x108463f in _start (rml)
    asm volatile (switch (native_arch) {
    ^

error(gpa): memory address 0x7f7fd43d0c00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ed17a in wrapNativeFunction__anon_19127 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10bb8e2 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108d1d5 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43d0d00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ed1fa in wrapNativeFunction__anon_19129 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10bb93a in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108d1d5 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43d0e00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ed27a in wrapNativeFunction__anon_19131 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10bb9ee in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108d1d5 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43d0f00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ed2fa in wrapNativeFunction__anon_19133 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10bbaa2 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108d1d5 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43d2000 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ed37a in wrapNativeFunction__anon_19138 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10bbb4d in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108d1d5 in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43d2100 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10bbcca in bindNamespace__anon_13551 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108d263 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43d2200 leaked: 
/home/nox/.zvm/master/lib/std/multi_array_list.zig:434:51: 0x1114704 in setCapacity (rml)
            const new_bytes = try gpa.alignedAlloc(
                                                  ^
/home/nox/.zvm/master/lib/std/multi_array_list.zig:420:36: 0x11151a8 in ensureTotalCapacity (rml)
            return self.setCapacity(gpa, better_capacity);
                                   ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:873:53: 0x111532a in ensureTotalCapacityContext (rml)
                try self.entries.ensureTotalCapacity(allocator, new_capacity);
                                                    ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:767:44: 0x1115820 in getOrPutContextAdapted__anon_22930 (rml)
            self.ensureTotalCapacityContext(allocator, self.entries.len + 1, ctx) catch |err| {
                                           ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:755:56: 0x1116477 in getOrPutContext (rml)
            const gop = try self.getOrPutContextAdapted(allocator, key, ctx, ctx);
                                                       ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:931:52: 0x1116580 in putContext (rml)
            const result = try self.getOrPutContext(allocator, key, ctx);
                                                   ^

error(gpa): memory address 0x7f7fd43d2300 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10bbd01 in bindNamespace__anon_13551 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108d263 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43d2400 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10bbe69 in bindNamespace__anon_13551 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108d263 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43d2500 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10bbfd5 in bindNamespace__anon_13551 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108d263 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43d2600 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10bc13e in bindNamespace__anon_13551 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108d263 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43d2700 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:62:47: 0x108d30d in bindObjectNamespaces__anon_6055 (rml)
        try env.data.bind(try Obj(Symbol).init(rml, rml.storage.origin, .{field.name}), builtinEnv.typeErase());
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^
/home/nox/.zvm/master/lib/std/start.zig:248:5: 0x108463f in _start (rml)
    asm volatile (switch (native_arch) {
    ^

error(gpa): memory address 0x7f7fd43d2800 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:335:61: 0x108b5b5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:50:47: 0x108d126 in bindObjectNamespaces__anon_6055 (rml)
        const builtinEnv: Obj(Env) = try .init(rml, rml.storage.origin);
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^
/home/nox/.zvm/master/lib/std/start.zig:248:5: 0x108463f in _start (rml)
    asm volatile (switch (native_arch) {
    ^

error(gpa): memory address 0x7f7fd43d2900 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ed44a in wrapNativeFunction__anon_19161 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10bc56e in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108d51a in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43d2a00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10bc66e in bindNamespace__anon_13656 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108d59e in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43d2b00 leaked: 
/home/nox/.zvm/master/lib/std/multi_array_list.zig:434:51: 0x1114704 in setCapacity (rml)
            const new_bytes = try gpa.alignedAlloc(
                                                  ^
/home/nox/.zvm/master/lib/std/multi_array_list.zig:420:36: 0x11151a8 in ensureTotalCapacity (rml)
            return self.setCapacity(gpa, better_capacity);
                                   ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:873:53: 0x111532a in ensureTotalCapacityContext (rml)
                try self.entries.ensureTotalCapacity(allocator, new_capacity);
                                                    ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:767:44: 0x1115820 in getOrPutContextAdapted__anon_22930 (rml)
            self.ensureTotalCapacityContext(allocator, self.entries.len + 1, ctx) catch |err| {
                                           ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:755:56: 0x1116477 in getOrPutContext (rml)
            const gop = try self.getOrPutContextAdapted(allocator, key, ctx, ctx);
                                                       ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:931:52: 0x1116580 in putContext (rml)
            const result = try self.getOrPutContext(allocator, key, ctx);
                                                   ^

error(gpa): memory address 0x7f7fd43d2c00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:62:47: 0x108d648 in bindObjectNamespaces__anon_6055 (rml)
        try env.data.bind(try Obj(Symbol).init(rml, rml.storage.origin, .{field.name}), builtinEnv.typeErase());
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^
/home/nox/.zvm/master/lib/std/start.zig:248:5: 0x108463f in _start (rml)
    asm volatile (switch (native_arch) {
    ^

error(gpa): memory address 0x7f7fd43d2d00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:335:61: 0x108b5b5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:50:47: 0x108d46e in bindObjectNamespaces__anon_6055 (rml)
        const builtinEnv: Obj(Env) = try .init(rml, rml.storage.origin);
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^
/home/nox/.zvm/master/lib/std/start.zig:248:5: 0x108463f in _start (rml)
    asm volatile (switch (native_arch) {
    ^

error(gpa): memory address 0x7f7fd43d2e00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ed74a in wrapNativeFunction__anon_19210 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10bc888 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108d80e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43d2f00 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:364:57: 0x10ee04a in wrap (rml)
            const memory = try rml.storage.object.create(ObjMemory(T));
                                                        ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:553:31: 0x10ed7ca in wrapNativeFunction__anon_19215 (rml)
    return Obj(Procedure).wrap(rml, origin, .{ .native_function = struct {
                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:375:63: 0x10bc8d4 in methods (rml)
                @field(ms, fieldName) = try wrapNativeFunction(rml, origin, @field(baseMethods, fieldName));
                                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:57:39: 0x108d80e in bindObjectNamespaces__anon_6055 (rml)
        const methods = try Ns.methods(rml, rml.storage.origin);
                                      ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^

error(gpa): memory address 0x7f7fd43d6000 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10bca5a in bindNamespace__anon_13896 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108d882 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43d6100 leaked: 
/home/nox/.zvm/master/lib/std/multi_array_list.zig:434:51: 0x1114704 in setCapacity (rml)
            const new_bytes = try gpa.alignedAlloc(
                                                  ^
/home/nox/.zvm/master/lib/std/multi_array_list.zig:420:36: 0x11151a8 in ensureTotalCapacity (rml)
            return self.setCapacity(gpa, better_capacity);
                                   ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:873:53: 0x111532a in ensureTotalCapacityContext (rml)
                try self.entries.ensureTotalCapacity(allocator, new_capacity);
                                                    ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:767:44: 0x1115820 in getOrPutContextAdapted__anon_22930 (rml)
            self.ensureTotalCapacityContext(allocator, self.entries.len + 1, ctx) catch |err| {
                                           ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:755:56: 0x1116477 in getOrPutContext (rml)
            const gop = try self.getOrPutContextAdapted(allocator, key, ctx, ctx);
                                                       ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:931:52: 0x1116580 in putContext (rml)
            const result = try self.getOrPutContext(allocator, key, ctx);
                                                   ^

error(gpa): memory address 0x7f7fd43d6200 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/env.zig:79:47: 0x10bca8e in bindNamespace__anon_13896 (rml)
            const sym: Obj(Symbol) = try .init(rml, origin, .{field.name});
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:60:42: 0x108d882 in bindObjectNamespaces__anon_6055 (rml)
        try builtinEnv.data.bindNamespace(methods);
                                         ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^

error(gpa): memory address 0x7f7fd43d6300 leaked: 
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/object.zig:317:61: 0x10b19e5 in init (rml)
                const memory = try rml.storage.object.create(ObjMemory(T));
                                                            ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/bindgen.zig:62:47: 0x108d91a in bindObjectNamespaces__anon_6055 (rml)
        try env.data.bind(try Obj(Symbol).init(rml, rml.storage.origin, .{field.name}), builtinEnv.typeErase());
                                              ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/mod/root.zig:153:33: 0x1085bbf in init (rml)
    bindgen.bindObjectNamespaces(self, self.namespace_env, BUILTIN_NAMESPACES) catch |err| switch (err) {
                                ^
/home/nox/projects/ribbon-lang/ribbon/packages/rml/src/bin/main.zig:39:32: 0x1084bd0 in main (rml)
    const rml: *Rml = try .init(gpa.allocator(), null, null, &diagnostic, &.{});
                               ^
/home/nox/.zvm/master/lib/std/start.zig:617:37: 0x1084a62 in posixCallMainAndExit (rml)
            const result = root.main() catch |err| {
                                    ^
/home/nox/.zvm/master/lib/std/start.zig:248:5: 0x108463f in _start (rml)
    asm volatile (switch (native_arch) {
    ^

error(gpa): memory address 0x7f7fd43ab400 leaked: 
/home/nox/.zvm/master/lib/std/multi_array_list.zig:434:51: 0x1114704 in setCapacity (rml)
            const new_bytes = try gpa.alignedAlloc(
                                                  ^
/home/nox/.zvm/master/lib/std/multi_array_list.zig:420:36: 0x11151a8 in ensureTotalCapacity (rml)
            return self.setCapacity(gpa, better_capacity);
                                   ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:884:49: 0x11153c7 in ensureTotalCapacityContext (rml)
            try self.entries.ensureTotalCapacity(allocator, new_capacity);
                                                ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:767:44: 0x1115820 in getOrPutContextAdapted__anon_22930 (rml)
            self.ensureTotalCapacityContext(allocator, self.entries.len + 1, ctx) catch |err| {
                                           ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:755:56: 0x1116477 in getOrPutContext (rml)
            const gop = try self.getOrPutContextAdapted(allocator, key, ctx, ctx);
                                                       ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:931:52: 0x1116580 in putContext (rml)
            const result = try self.getOrPutContext(allocator, key, ctx);
                                                   ^

error(gpa): memory address 0x7f7fd43abc00 leaked: 
/home/nox/.zvm/master/lib/std/multi_array_list.zig:434:51: 0x1114704 in setCapacity (rml)
            const new_bytes = try gpa.alignedAlloc(
                                                  ^
/home/nox/.zvm/master/lib/std/multi_array_list.zig:420:36: 0x11151a8 in ensureTotalCapacity (rml)
            return self.setCapacity(gpa, better_capacity);
                                   ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:884:49: 0x11153c7 in ensureTotalCapacityContext (rml)
            try self.entries.ensureTotalCapacity(allocator, new_capacity);
                                                ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:767:44: 0x1115820 in getOrPutContextAdapted__anon_22930 (rml)
            self.ensureTotalCapacityContext(allocator, self.entries.len + 1, ctx) catch |err| {
                                           ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:755:56: 0x1116477 in getOrPutContext (rml)
            const gop = try self.getOrPutContextAdapted(allocator, key, ctx, ctx);
                                                       ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:931:52: 0x1116580 in putContext (rml)
            const result = try self.getOrPutContext(allocator, key, ctx);
                                                   ^

error(gpa): memory address 0x7f7fd43ce000 leaked: 
/home/nox/.zvm/master/lib/std/multi_array_list.zig:434:51: 0x1114704 in setCapacity (rml)
            const new_bytes = try gpa.alignedAlloc(
                                                  ^
/home/nox/.zvm/master/lib/std/multi_array_list.zig:420:36: 0x11151a8 in ensureTotalCapacity (rml)
            return self.setCapacity(gpa, better_capacity);
                                   ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:879:57: 0x1115443 in ensureTotalCapacityContext (rml)
                    try self.entries.ensureTotalCapacity(allocator, new_capacity);
                                                        ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:767:44: 0x1115820 in getOrPutContextAdapted__anon_22930 (rml)
            self.ensureTotalCapacityContext(allocator, self.entries.len + 1, ctx) catch |err| {
                                           ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:755:56: 0x1116477 in getOrPutContext (rml)
            const gop = try self.getOrPutContextAdapted(allocator, key, ctx, ctx);
                                                       ^
/home/nox/.zvm/master/lib/std/array_hash_map.zig:931:52: 0x1116580 in putContext (rml)
            const result = try self.getOrPutContext(allocator, key, ctx);
                                                   ^

