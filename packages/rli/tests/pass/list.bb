(import list)

(assert-eq () nil)
(assert-eq '(1 foo 3) (list 1 'foo 3))
(assert-eq 3 (list/length '(1 2 3)))
(assert-eq 0 (list/length nil))
(assert-eq '(2 3 4) (list/map '(1 2 3) (fun (x) (+ x 1))))
(each '(1 2 3) (x) (print x)) (print-ln)
(assert-eq 6 (foldl '(1 2 3) 0 (x y) (+ x y)))
(assert-eq 0 (foldr '(1 2 3) 6 (x y) (- x y)))
(assert-eq '(1 3 5) (filter '(0 1 2 3 4 5) (x) (odd? x)))
(assert-eq '(1 2 3 4 5 6) (list/concat '(1 2) '(3 4) '(5 6)))
(assert-eq () (list/concat))
(assert-eq '(3 4 1 2 5 6 1 2 7 8) (list/intercalate '(1 2) '(3 4) '(5 6) '(7 8)))
(assert-eq '(1 x 2 x 3 x 4) (list/intercalate 'x 1 2 3 4))
(assert (list/member? 3 '(1 2 3 4)))
(assert (not (list/member? 5 '(1 2 3 4))))
(assert-eq '((1 2) (3 4)) (list/zip '(1 3) '(2 4)))
(assert-eq '((0 1 2) (1 3 4)) (list/enumerate '(1 3) '(2 4)))
