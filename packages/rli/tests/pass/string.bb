(import string)

(assert (string/empty? ""))
(assert (not (string/empty? "hello")))
(assert-eq 0 (string/length ""))
(assert-eq 1 (string/length "ðŸŽ€"))
(assert-eq 5 (string/length "hello"))
(assert-eq '('h' 'e' 'l' 'l' 'o') (list<-string "hello"))
(assert-eq "hello" (string<-list '('h' 'e' 'l' 'l' 'o')))
(assert-eq 3 (string/find "hello" "lo"))
(assert-eq 2 (string/find "hello" 'l'))
(assert-eq (+ 2 1) (string/find "ðŸŽ€hello" 'l'))
(assert-eq 3 (string/find-byte-offset "hello" "lo"))
(assert-eq 2 (string/find-byte-offset "hello" 'l'))
(assert-eq 6 (string/find-byte-offset "ðŸŽ€hello" 'l'))
(assert-eq 'h' (string/nth-char 0 "hello"))
(assert-eq 'o' (string/nth-char 4 "hello"))
(assert-eq 'o' (string/nth-char 5 "ðŸŽ€hello"))
(assert-eq 1 (string/index<-byte-offset "hello" 1))
(assert-eq 1 (string/index<-byte-offset "ðŸŽ€hello" 4))
(assert-eq 1 (string/byte-offset<-index "hello" 1))
(assert-eq 4 (string/byte-offset<-index "ðŸŽ€hello" 1))
(assert-eq "hello world" (string/concat "hello" " world"))
(assert-eq "ðŸŽ€hello worldðŸŽ€" (string/concat 'ðŸŽ€' "hello" " " "world" 'ðŸŽ€'))
(assert-eq "hello" (string/concat 'h' "ello"))
(assert-eq "ðŸŽ€ hello world ðŸŽ€" (string/intercalate " " 'ðŸŽ€' "hello" "world" 'ðŸŽ€'))
(assert-eq "cat" (string/intercalate 'a' 'c' 't'))
(assert-eq "hello" (string/sub "ðŸŽ€ hello ðŸŽ€" 2 7))
(assert-eq "hello" (string/sub "hello" 0 5))
(assert-eq "ðŸŽ€helloðŸŽ€" (string/sub "ðŸŽ€helloðŸŽ€" 0 7))
(assert-eq () (string/sub "hello" 0 6))
(assert-eq "hello" (string/byte-offset-sub "ðŸŽ€ hello ðŸŽ€" 5 10))
(assert-eq "hello" (string/byte-offset-sub "hello" 0 5))
(assert-eq "ðŸŽ€helloðŸŽ€" (string/byte-offset-sub "ðŸŽ€helloðŸŽ€" 0 13))
